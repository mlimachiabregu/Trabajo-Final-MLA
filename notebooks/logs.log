2024-10-21 12:25:13,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 12:25:13,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 12:25:13,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 12:25:13,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 12:25:15,930:INFO:PyCaret ClassificationExperiment
2024-10-21 12:25:15,930:INFO:Logging name: clf-default-name
2024-10-21 12:25:15,931:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-21 12:25:15,931:INFO:version 3.3.2
2024-10-21 12:25:15,931:INFO:Initializing setup()
2024-10-21 12:25:15,931:INFO:self.USI: c19a
2024-10-21 12:25:15,931:INFO:self._variable_keys: {'gpu_n_jobs_param', '_available_plots', 'is_multiclass', 'fold_generator', 'data', 'USI', 'html_param', 'fold_shuffle_param', 'X', 'fix_imbalance', 'idx', 'exp_name_log', 'gpu_param', 'pipeline', 'exp_id', 'n_jobs_param', 'y_test', '_ml_usecase', 'seed', 'X_train', 'fold_groups_param', 'X_test', 'target_param', 'y', 'logging_param', 'log_plots_param', 'memory', 'y_train'}
2024-10-21 12:25:15,931:INFO:Checking environment
2024-10-21 12:25:15,931:INFO:python_version: 3.11.7
2024-10-21 12:25:15,931:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-10-21 12:25:15,931:INFO:machine: AMD64
2024-10-21 12:25:15,931:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-21 12:25:15,935:INFO:Memory: svmem(total=34205937664, available=17364471808, percent=49.2, used=16841465856, free=17364471808)
2024-10-21 12:25:15,935:INFO:Physical Core: 8
2024-10-21 12:25:15,935:INFO:Logical Core: 16
2024-10-21 12:25:15,935:INFO:Checking libraries
2024-10-21 12:25:15,935:INFO:System:
2024-10-21 12:25:15,935:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-10-21 12:25:15,935:INFO:executable: d:\EntregableMLA\TrabajoFinal\Scripts\python.exe
2024-10-21 12:25:15,935:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-21 12:25:15,935:INFO:PyCaret required dependencies:
2024-10-21 12:25:15,978:INFO:                 pip: 23.2.1
2024-10-21 12:25:15,978:INFO:          setuptools: 65.5.0
2024-10-21 12:25:15,978:INFO:             pycaret: 3.3.2
2024-10-21 12:25:15,978:INFO:             IPython: 8.28.0
2024-10-21 12:25:15,978:INFO:          ipywidgets: 8.1.5
2024-10-21 12:25:15,978:INFO:                tqdm: 4.66.5
2024-10-21 12:25:15,978:INFO:               numpy: 1.26.4
2024-10-21 12:25:15,978:INFO:              pandas: 2.1.4
2024-10-21 12:25:15,978:INFO:              jinja2: 3.1.4
2024-10-21 12:25:15,978:INFO:               scipy: 1.11.4
2024-10-21 12:25:15,978:INFO:              joblib: 1.3.2
2024-10-21 12:25:15,978:INFO:             sklearn: 1.4.2
2024-10-21 12:25:15,978:INFO:                pyod: 2.0.2
2024-10-21 12:25:15,978:INFO:            imblearn: 0.12.4
2024-10-21 12:25:15,978:INFO:   category_encoders: 2.6.4
2024-10-21 12:25:15,978:INFO:            lightgbm: 4.5.0
2024-10-21 12:25:15,978:INFO:               numba: 0.60.0
2024-10-21 12:25:15,978:INFO:            requests: 2.32.3
2024-10-21 12:25:15,978:INFO:          matplotlib: 3.7.5
2024-10-21 12:25:15,978:INFO:          scikitplot: 0.3.7
2024-10-21 12:25:15,979:INFO:         yellowbrick: 1.5
2024-10-21 12:25:15,979:INFO:              plotly: 5.24.1
2024-10-21 12:25:15,979:INFO:    plotly-resampler: Not installed
2024-10-21 12:25:15,979:INFO:             kaleido: 0.2.1
2024-10-21 12:25:15,979:INFO:           schemdraw: 0.15
2024-10-21 12:25:15,979:INFO:         statsmodels: 0.14.4
2024-10-21 12:25:15,979:INFO:              sktime: 0.26.0
2024-10-21 12:25:15,979:INFO:               tbats: 1.1.3
2024-10-21 12:25:15,979:INFO:            pmdarima: 2.0.4
2024-10-21 12:25:15,979:INFO:              psutil: 6.1.0
2024-10-21 12:25:15,979:INFO:          markupsafe: 3.0.2
2024-10-21 12:25:15,979:INFO:             pickle5: Not installed
2024-10-21 12:25:15,979:INFO:         cloudpickle: 3.1.0
2024-10-21 12:25:15,979:INFO:         deprecation: 2.1.0
2024-10-21 12:25:15,979:INFO:              xxhash: 3.5.0
2024-10-21 12:25:15,979:INFO:           wurlitzer: Not installed
2024-10-21 12:25:15,979:INFO:PyCaret optional dependencies:
2024-10-21 12:25:16,262:INFO:                shap: Not installed
2024-10-21 12:25:16,262:INFO:           interpret: Not installed
2024-10-21 12:25:16,262:INFO:                umap: Not installed
2024-10-21 12:25:16,262:INFO:     ydata_profiling: Not installed
2024-10-21 12:25:16,262:INFO:  explainerdashboard: Not installed
2024-10-21 12:25:16,262:INFO:             autoviz: Not installed
2024-10-21 12:25:16,262:INFO:           fairlearn: Not installed
2024-10-21 12:25:16,262:INFO:          deepchecks: Not installed
2024-10-21 12:25:16,262:INFO:             xgboost: Not installed
2024-10-21 12:25:16,262:INFO:            catboost: Not installed
2024-10-21 12:25:16,262:INFO:              kmodes: Not installed
2024-10-21 12:25:16,262:INFO:             mlxtend: Not installed
2024-10-21 12:25:16,262:INFO:       statsforecast: Not installed
2024-10-21 12:25:16,262:INFO:        tune_sklearn: Not installed
2024-10-21 12:25:16,262:INFO:                 ray: Not installed
2024-10-21 12:25:16,262:INFO:            hyperopt: 0.2.7
2024-10-21 12:25:16,262:INFO:              optuna: 4.0.0
2024-10-21 12:25:16,262:INFO:               skopt: 0.10.2
2024-10-21 12:25:16,262:INFO:              mlflow: 2.17.0
2024-10-21 12:25:16,262:INFO:              gradio: Not installed
2024-10-21 12:25:16,264:INFO:             fastapi: 0.115.2
2024-10-21 12:25:16,264:INFO:             uvicorn: 0.32.0
2024-10-21 12:25:16,264:INFO:              m2cgen: Not installed
2024-10-21 12:25:16,264:INFO:           evidently: Not installed
2024-10-21 12:25:16,264:INFO:               fugue: Not installed
2024-10-21 12:25:16,264:INFO:           streamlit: Not installed
2024-10-21 12:25:16,264:INFO:             prophet: Not installed
2024-10-21 12:25:16,264:INFO:None
2024-10-21 12:25:16,264:INFO:Set up data.
2024-10-21 12:25:16,340:INFO:Set up folding strategy.
2024-10-21 12:25:16,340:INFO:Set up train/test split.
2024-10-21 12:25:16,428:INFO:Set up index.
2024-10-21 12:25:16,434:INFO:Assigning column types.
2024-10-21 12:25:16,463:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-21 12:25:16,500:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 12:25:16,502:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 12:25:16,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:16,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:16,567:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 12:25:16,568:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 12:25:16,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:16,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:16,591:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-21 12:25:16,627:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 12:25:16,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:16,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:16,686:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 12:25:16,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:16,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:16,710:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-21 12:25:16,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:16,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:16,830:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:16,830:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:16,833:INFO:Preparing preprocessing pipeline...
2024-10-21 12:25:16,838:INFO:Set up simple imputation.
2024-10-21 12:25:16,859:INFO:Set up encoding of ordinal features.
2024-10-21 12:25:16,869:INFO:Set up encoding of categorical features.
2024-10-21 12:25:17,332:INFO:Finished creating preprocessing pipeline.
2024-10-21 12:25:17,346:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Surname'],
                                    transformer=TargetEncoder(cols=['Surname'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-10-21 12:25:17,346:INFO:Creating final display dataframe.
2024-10-21 12:25:18,021:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Exited
2                   Target type            Binary
3           Original data shape      (165034, 14)
4        Transformed data shape      (165034, 15)
5   Transformed train set shape      (115523, 15)
6    Transformed test set shape       (49511, 15)
7               Ignore features                 1
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              c19a
2024-10-21 12:25:18,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:18,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:18,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:18,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 12:25:18,150:INFO:setup() successfully completed in 2.22s...............
2024-10-21 12:38:42,735:INFO:Initializing compare_models()
2024-10-21 12:38:42,736:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-21 12:38:42,737:INFO:Checking exceptions
2024-10-21 12:38:42,845:INFO:Preparing display monitor
2024-10-21 12:38:42,869:INFO:Initializing Logistic Regression
2024-10-21 12:38:42,869:INFO:Total runtime is 0.0 minutes
2024-10-21 12:38:42,872:INFO:SubProcess create_model() called ==================================
2024-10-21 12:38:42,873:INFO:Initializing create_model()
2024-10-21 12:38:42,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012810A6D210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:38:42,873:INFO:Checking exceptions
2024-10-21 12:38:42,873:INFO:Importing libraries
2024-10-21 12:38:42,873:INFO:Copying training dataset
2024-10-21 12:38:42,920:INFO:Defining folds
2024-10-21 12:38:42,920:INFO:Declaring metric variables
2024-10-21 12:38:42,922:INFO:Importing untrained model
2024-10-21 12:38:42,925:INFO:Logistic Regression Imported successfully
2024-10-21 12:38:42,929:INFO:Starting cross validation
2024-10-21 12:38:42,930:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:38:54,496:INFO:Calculating mean and std
2024-10-21 12:38:54,497:INFO:Creating metrics dataframe
2024-10-21 12:38:54,499:INFO:Uploading results into container
2024-10-21 12:38:54,499:INFO:Uploading model into container now
2024-10-21 12:38:54,499:INFO:_master_model_container: 1
2024-10-21 12:38:54,499:INFO:_display_container: 2
2024-10-21 12:38:54,500:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-21 12:38:54,500:INFO:create_model() successfully completed......................................
2024-10-21 12:38:54,601:INFO:SubProcess create_model() end ==================================
2024-10-21 12:38:54,601:INFO:Creating metrics dataframe
2024-10-21 12:38:54,605:INFO:Initializing K Neighbors Classifier
2024-10-21 12:38:54,605:INFO:Total runtime is 0.19560078382492066 minutes
2024-10-21 12:38:54,608:INFO:SubProcess create_model() called ==================================
2024-10-21 12:38:54,609:INFO:Initializing create_model()
2024-10-21 12:38:54,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012810A6D210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:38:54,609:INFO:Checking exceptions
2024-10-21 12:38:54,609:INFO:Importing libraries
2024-10-21 12:38:54,609:INFO:Copying training dataset
2024-10-21 12:38:54,653:INFO:Defining folds
2024-10-21 12:38:54,653:INFO:Declaring metric variables
2024-10-21 12:38:54,655:INFO:Importing untrained model
2024-10-21 12:38:54,658:INFO:K Neighbors Classifier Imported successfully
2024-10-21 12:38:54,662:INFO:Starting cross validation
2024-10-21 12:38:54,664:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:38:59,309:INFO:Calculating mean and std
2024-10-21 12:38:59,310:INFO:Creating metrics dataframe
2024-10-21 12:38:59,312:INFO:Uploading results into container
2024-10-21 12:38:59,314:INFO:Uploading model into container now
2024-10-21 12:38:59,314:INFO:_master_model_container: 2
2024-10-21 12:38:59,315:INFO:_display_container: 2
2024-10-21 12:38:59,315:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-21 12:38:59,315:INFO:create_model() successfully completed......................................
2024-10-21 12:38:59,424:INFO:SubProcess create_model() end ==================================
2024-10-21 12:38:59,424:INFO:Creating metrics dataframe
2024-10-21 12:38:59,430:INFO:Initializing Naive Bayes
2024-10-21 12:38:59,430:INFO:Total runtime is 0.2760105649630229 minutes
2024-10-21 12:38:59,432:INFO:SubProcess create_model() called ==================================
2024-10-21 12:38:59,432:INFO:Initializing create_model()
2024-10-21 12:38:59,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012810A6D210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:38:59,432:INFO:Checking exceptions
2024-10-21 12:38:59,432:INFO:Importing libraries
2024-10-21 12:38:59,432:INFO:Copying training dataset
2024-10-21 12:38:59,477:INFO:Defining folds
2024-10-21 12:38:59,477:INFO:Declaring metric variables
2024-10-21 12:38:59,478:INFO:Importing untrained model
2024-10-21 12:38:59,480:INFO:Naive Bayes Imported successfully
2024-10-21 12:38:59,486:INFO:Starting cross validation
2024-10-21 12:38:59,487:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:39:01,037:INFO:Calculating mean and std
2024-10-21 12:39:01,038:INFO:Creating metrics dataframe
2024-10-21 12:39:01,039:INFO:Uploading results into container
2024-10-21 12:39:01,040:INFO:Uploading model into container now
2024-10-21 12:39:01,040:INFO:_master_model_container: 3
2024-10-21 12:39:01,040:INFO:_display_container: 2
2024-10-21 12:39:01,041:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-21 12:39:01,041:INFO:create_model() successfully completed......................................
2024-10-21 12:39:01,138:INFO:SubProcess create_model() end ==================================
2024-10-21 12:39:01,138:INFO:Creating metrics dataframe
2024-10-21 12:39:01,143:INFO:Initializing Decision Tree Classifier
2024-10-21 12:39:01,143:INFO:Total runtime is 0.30456049044926964 minutes
2024-10-21 12:39:01,145:INFO:SubProcess create_model() called ==================================
2024-10-21 12:39:01,146:INFO:Initializing create_model()
2024-10-21 12:39:01,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012810A6D210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:39:01,146:INFO:Checking exceptions
2024-10-21 12:39:01,146:INFO:Importing libraries
2024-10-21 12:39:01,146:INFO:Copying training dataset
2024-10-21 12:39:01,195:INFO:Defining folds
2024-10-21 12:39:01,195:INFO:Declaring metric variables
2024-10-21 12:39:01,198:INFO:Importing untrained model
2024-10-21 12:39:01,200:INFO:Decision Tree Classifier Imported successfully
2024-10-21 12:39:01,205:INFO:Starting cross validation
2024-10-21 12:39:01,206:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:39:03,617:INFO:Calculating mean and std
2024-10-21 12:39:03,618:INFO:Creating metrics dataframe
2024-10-21 12:39:03,619:INFO:Uploading results into container
2024-10-21 12:39:03,619:INFO:Uploading model into container now
2024-10-21 12:39:03,620:INFO:_master_model_container: 4
2024-10-21 12:39:03,620:INFO:_display_container: 2
2024-10-21 12:39:03,620:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-10-21 12:39:03,620:INFO:create_model() successfully completed......................................
2024-10-21 12:39:03,708:INFO:SubProcess create_model() end ==================================
2024-10-21 12:39:03,709:INFO:Creating metrics dataframe
2024-10-21 12:39:03,715:INFO:Initializing SVM - Linear Kernel
2024-10-21 12:39:03,715:INFO:Total runtime is 0.3474280913670858 minutes
2024-10-21 12:39:03,717:INFO:SubProcess create_model() called ==================================
2024-10-21 12:39:03,717:INFO:Initializing create_model()
2024-10-21 12:39:03,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012810A6D210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:39:03,718:INFO:Checking exceptions
2024-10-21 12:39:03,718:INFO:Importing libraries
2024-10-21 12:39:03,718:INFO:Copying training dataset
2024-10-21 12:39:03,765:INFO:Defining folds
2024-10-21 12:39:03,765:INFO:Declaring metric variables
2024-10-21 12:39:03,768:INFO:Importing untrained model
2024-10-21 12:39:03,771:INFO:SVM - Linear Kernel Imported successfully
2024-10-21 12:39:03,775:INFO:Starting cross validation
2024-10-21 12:39:03,776:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:39:09,235:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:39:09,942:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:39:10,312:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:39:10,334:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:39:10,361:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:39:10,523:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:39:10,814:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:39:11,212:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:39:11,227:INFO:Calculating mean and std
2024-10-21 12:39:11,228:INFO:Creating metrics dataframe
2024-10-21 12:39:11,230:INFO:Uploading results into container
2024-10-21 12:39:11,231:INFO:Uploading model into container now
2024-10-21 12:39:11,232:INFO:_master_model_container: 5
2024-10-21 12:39:11,232:INFO:_display_container: 2
2024-10-21 12:39:11,232:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-21 12:39:11,232:INFO:create_model() successfully completed......................................
2024-10-21 12:39:11,320:INFO:SubProcess create_model() end ==================================
2024-10-21 12:39:11,320:INFO:Creating metrics dataframe
2024-10-21 12:39:11,327:INFO:Initializing Ridge Classifier
2024-10-21 12:39:11,327:INFO:Total runtime is 0.4742954810460409 minutes
2024-10-21 12:39:11,329:INFO:SubProcess create_model() called ==================================
2024-10-21 12:39:11,329:INFO:Initializing create_model()
2024-10-21 12:39:11,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012810A6D210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:39:11,330:INFO:Checking exceptions
2024-10-21 12:39:11,330:INFO:Importing libraries
2024-10-21 12:39:11,330:INFO:Copying training dataset
2024-10-21 12:39:11,374:INFO:Defining folds
2024-10-21 12:39:11,374:INFO:Declaring metric variables
2024-10-21 12:39:11,376:INFO:Importing untrained model
2024-10-21 12:39:11,379:INFO:Ridge Classifier Imported successfully
2024-10-21 12:39:11,383:INFO:Starting cross validation
2024-10-21 12:39:11,384:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:39:12,910:INFO:Calculating mean and std
2024-10-21 12:39:12,911:INFO:Creating metrics dataframe
2024-10-21 12:39:12,912:INFO:Uploading results into container
2024-10-21 12:39:12,912:INFO:Uploading model into container now
2024-10-21 12:39:12,914:INFO:_master_model_container: 6
2024-10-21 12:39:12,914:INFO:_display_container: 2
2024-10-21 12:39:12,914:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-10-21 12:39:12,914:INFO:create_model() successfully completed......................................
2024-10-21 12:39:13,006:INFO:SubProcess create_model() end ==================================
2024-10-21 12:39:13,006:INFO:Creating metrics dataframe
2024-10-21 12:39:13,012:INFO:Initializing Random Forest Classifier
2024-10-21 12:39:13,012:INFO:Total runtime is 0.50238063732783 minutes
2024-10-21 12:39:13,015:INFO:SubProcess create_model() called ==================================
2024-10-21 12:39:13,015:INFO:Initializing create_model()
2024-10-21 12:39:13,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012810A6D210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:39:13,015:INFO:Checking exceptions
2024-10-21 12:39:13,015:INFO:Importing libraries
2024-10-21 12:39:13,015:INFO:Copying training dataset
2024-10-21 12:39:13,060:INFO:Defining folds
2024-10-21 12:39:13,061:INFO:Declaring metric variables
2024-10-21 12:39:13,063:INFO:Importing untrained model
2024-10-21 12:39:13,066:INFO:Random Forest Classifier Imported successfully
2024-10-21 12:39:13,072:INFO:Starting cross validation
2024-10-21 12:39:13,072:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:39:32,590:INFO:Calculating mean and std
2024-10-21 12:39:32,591:INFO:Creating metrics dataframe
2024-10-21 12:39:32,593:INFO:Uploading results into container
2024-10-21 12:39:32,593:INFO:Uploading model into container now
2024-10-21 12:39:32,593:INFO:_master_model_container: 7
2024-10-21 12:39:32,593:INFO:_display_container: 2
2024-10-21 12:39:32,594:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-21 12:39:32,594:INFO:create_model() successfully completed......................................
2024-10-21 12:39:32,713:INFO:SubProcess create_model() end ==================================
2024-10-21 12:39:32,713:INFO:Creating metrics dataframe
2024-10-21 12:39:32,720:INFO:Initializing Quadratic Discriminant Analysis
2024-10-21 12:39:32,720:INFO:Total runtime is 0.8308544794718424 minutes
2024-10-21 12:39:32,724:INFO:SubProcess create_model() called ==================================
2024-10-21 12:39:32,724:INFO:Initializing create_model()
2024-10-21 12:39:32,724:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012810A6D210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:39:32,724:INFO:Checking exceptions
2024-10-21 12:39:32,725:INFO:Importing libraries
2024-10-21 12:39:32,725:INFO:Copying training dataset
2024-10-21 12:39:32,775:INFO:Defining folds
2024-10-21 12:39:32,775:INFO:Declaring metric variables
2024-10-21 12:39:32,778:INFO:Importing untrained model
2024-10-21 12:39:32,781:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-21 12:39:32,785:INFO:Starting cross validation
2024-10-21 12:39:32,787:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:39:33,997:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 12:39:34,079:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 12:39:34,137:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 12:39:34,269:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 12:39:34,271:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 12:39:34,390:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 12:39:34,424:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 12:39:34,449:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 12:39:34,491:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 12:39:34,531:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 12:39:34,642:INFO:Calculating mean and std
2024-10-21 12:39:34,643:INFO:Creating metrics dataframe
2024-10-21 12:39:34,645:INFO:Uploading results into container
2024-10-21 12:39:34,645:INFO:Uploading model into container now
2024-10-21 12:39:34,645:INFO:_master_model_container: 8
2024-10-21 12:39:34,645:INFO:_display_container: 2
2024-10-21 12:39:34,646:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-21 12:39:34,646:INFO:create_model() successfully completed......................................
2024-10-21 12:39:34,782:INFO:SubProcess create_model() end ==================================
2024-10-21 12:39:34,782:INFO:Creating metrics dataframe
2024-10-21 12:39:34,788:INFO:Initializing Ada Boost Classifier
2024-10-21 12:39:34,788:INFO:Total runtime is 0.8653213620185852 minutes
2024-10-21 12:39:34,791:INFO:SubProcess create_model() called ==================================
2024-10-21 12:39:34,791:INFO:Initializing create_model()
2024-10-21 12:39:34,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012810A6D210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:39:34,791:INFO:Checking exceptions
2024-10-21 12:39:34,791:INFO:Importing libraries
2024-10-21 12:39:34,792:INFO:Copying training dataset
2024-10-21 12:39:34,841:INFO:Defining folds
2024-10-21 12:39:34,841:INFO:Declaring metric variables
2024-10-21 12:39:34,844:INFO:Importing untrained model
2024-10-21 12:39:34,847:INFO:Ada Boost Classifier Imported successfully
2024-10-21 12:39:34,852:INFO:Starting cross validation
2024-10-21 12:39:34,854:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:39:35,718:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 12:39:35,757:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 12:39:35,838:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 12:39:35,885:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 12:39:35,951:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 12:39:35,962:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 12:39:35,992:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 12:39:36,045:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 12:39:36,064:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 12:39:36,133:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 12:39:43,465:INFO:Calculating mean and std
2024-10-21 12:39:43,466:INFO:Creating metrics dataframe
2024-10-21 12:39:43,467:INFO:Uploading results into container
2024-10-21 12:39:43,467:INFO:Uploading model into container now
2024-10-21 12:39:43,468:INFO:_master_model_container: 9
2024-10-21 12:39:43,468:INFO:_display_container: 2
2024-10-21 12:39:43,468:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-10-21 12:39:43,468:INFO:create_model() successfully completed......................................
2024-10-21 12:39:43,560:INFO:SubProcess create_model() end ==================================
2024-10-21 12:39:43,560:INFO:Creating metrics dataframe
2024-10-21 12:39:43,568:INFO:Initializing Gradient Boosting Classifier
2024-10-21 12:39:43,568:INFO:Total runtime is 1.01164102156957 minutes
2024-10-21 12:39:43,570:INFO:SubProcess create_model() called ==================================
2024-10-21 12:39:43,571:INFO:Initializing create_model()
2024-10-21 12:39:43,571:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012810A6D210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:39:43,571:INFO:Checking exceptions
2024-10-21 12:39:43,571:INFO:Importing libraries
2024-10-21 12:39:43,571:INFO:Copying training dataset
2024-10-21 12:39:43,614:INFO:Defining folds
2024-10-21 12:39:43,614:INFO:Declaring metric variables
2024-10-21 12:39:43,617:INFO:Importing untrained model
2024-10-21 12:39:43,619:INFO:Gradient Boosting Classifier Imported successfully
2024-10-21 12:39:43,625:INFO:Starting cross validation
2024-10-21 12:39:43,626:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:40:11,695:INFO:Calculating mean and std
2024-10-21 12:40:11,696:INFO:Creating metrics dataframe
2024-10-21 12:40:11,697:INFO:Uploading results into container
2024-10-21 12:40:11,698:INFO:Uploading model into container now
2024-10-21 12:40:11,698:INFO:_master_model_container: 10
2024-10-21 12:40:11,698:INFO:_display_container: 2
2024-10-21 12:40:11,699:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-21 12:40:11,699:INFO:create_model() successfully completed......................................
2024-10-21 12:40:11,796:INFO:SubProcess create_model() end ==================================
2024-10-21 12:40:11,796:INFO:Creating metrics dataframe
2024-10-21 12:40:11,804:INFO:Initializing Linear Discriminant Analysis
2024-10-21 12:40:11,804:INFO:Total runtime is 1.4822460134824116 minutes
2024-10-21 12:40:11,807:INFO:SubProcess create_model() called ==================================
2024-10-21 12:40:11,807:INFO:Initializing create_model()
2024-10-21 12:40:11,807:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012810A6D210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:40:11,807:INFO:Checking exceptions
2024-10-21 12:40:11,807:INFO:Importing libraries
2024-10-21 12:40:11,807:INFO:Copying training dataset
2024-10-21 12:40:11,853:INFO:Defining folds
2024-10-21 12:40:11,854:INFO:Declaring metric variables
2024-10-21 12:40:11,857:INFO:Importing untrained model
2024-10-21 12:40:11,859:INFO:Linear Discriminant Analysis Imported successfully
2024-10-21 12:40:11,864:INFO:Starting cross validation
2024-10-21 12:40:11,865:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:40:13,687:INFO:Calculating mean and std
2024-10-21 12:40:13,688:INFO:Creating metrics dataframe
2024-10-21 12:40:13,690:INFO:Uploading results into container
2024-10-21 12:40:13,690:INFO:Uploading model into container now
2024-10-21 12:40:13,691:INFO:_master_model_container: 11
2024-10-21 12:40:13,691:INFO:_display_container: 2
2024-10-21 12:40:13,691:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-21 12:40:13,691:INFO:create_model() successfully completed......................................
2024-10-21 12:40:13,828:INFO:SubProcess create_model() end ==================================
2024-10-21 12:40:13,828:INFO:Creating metrics dataframe
2024-10-21 12:40:13,837:INFO:Initializing Extra Trees Classifier
2024-10-21 12:40:13,837:INFO:Total runtime is 1.516130526860555 minutes
2024-10-21 12:40:13,839:INFO:SubProcess create_model() called ==================================
2024-10-21 12:40:13,839:INFO:Initializing create_model()
2024-10-21 12:40:13,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012810A6D210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:40:13,840:INFO:Checking exceptions
2024-10-21 12:40:13,840:INFO:Importing libraries
2024-10-21 12:40:13,840:INFO:Copying training dataset
2024-10-21 12:40:13,886:INFO:Defining folds
2024-10-21 12:40:13,886:INFO:Declaring metric variables
2024-10-21 12:40:13,889:INFO:Importing untrained model
2024-10-21 12:40:13,892:INFO:Extra Trees Classifier Imported successfully
2024-10-21 12:40:13,897:INFO:Starting cross validation
2024-10-21 12:40:13,898:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:40:30,958:INFO:Calculating mean and std
2024-10-21 12:40:30,960:INFO:Creating metrics dataframe
2024-10-21 12:40:30,962:INFO:Uploading results into container
2024-10-21 12:40:30,963:INFO:Uploading model into container now
2024-10-21 12:40:30,964:INFO:_master_model_container: 12
2024-10-21 12:40:30,964:INFO:_display_container: 2
2024-10-21 12:40:30,964:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-10-21 12:40:30,964:INFO:create_model() successfully completed......................................
2024-10-21 12:40:31,116:INFO:SubProcess create_model() end ==================================
2024-10-21 12:40:31,116:INFO:Creating metrics dataframe
2024-10-21 12:40:31,124:INFO:Initializing Light Gradient Boosting Machine
2024-10-21 12:40:31,124:INFO:Total runtime is 1.804246985912323 minutes
2024-10-21 12:40:31,126:INFO:SubProcess create_model() called ==================================
2024-10-21 12:40:31,126:INFO:Initializing create_model()
2024-10-21 12:40:31,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012810A6D210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:40:31,126:INFO:Checking exceptions
2024-10-21 12:40:31,126:INFO:Importing libraries
2024-10-21 12:40:31,126:INFO:Copying training dataset
2024-10-21 12:40:31,178:INFO:Defining folds
2024-10-21 12:40:31,179:INFO:Declaring metric variables
2024-10-21 12:40:31,182:INFO:Importing untrained model
2024-10-21 12:40:31,184:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-21 12:40:31,189:INFO:Starting cross validation
2024-10-21 12:40:31,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:40:35,145:INFO:Calculating mean and std
2024-10-21 12:40:35,146:INFO:Creating metrics dataframe
2024-10-21 12:40:35,148:INFO:Uploading results into container
2024-10-21 12:40:35,149:INFO:Uploading model into container now
2024-10-21 12:40:35,149:INFO:_master_model_container: 13
2024-10-21 12:40:35,149:INFO:_display_container: 2
2024-10-21 12:40:35,150:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-21 12:40:35,150:INFO:create_model() successfully completed......................................
2024-10-21 12:40:35,271:INFO:SubProcess create_model() end ==================================
2024-10-21 12:40:35,271:INFO:Creating metrics dataframe
2024-10-21 12:40:35,280:INFO:Initializing Dummy Classifier
2024-10-21 12:40:35,280:INFO:Total runtime is 1.8735074838002521 minutes
2024-10-21 12:40:35,282:INFO:SubProcess create_model() called ==================================
2024-10-21 12:40:35,283:INFO:Initializing create_model()
2024-10-21 12:40:35,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012810A6D210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:40:35,283:INFO:Checking exceptions
2024-10-21 12:40:35,283:INFO:Importing libraries
2024-10-21 12:40:35,283:INFO:Copying training dataset
2024-10-21 12:40:35,330:INFO:Defining folds
2024-10-21 12:40:35,330:INFO:Declaring metric variables
2024-10-21 12:40:35,333:INFO:Importing untrained model
2024-10-21 12:40:35,335:INFO:Dummy Classifier Imported successfully
2024-10-21 12:40:35,342:INFO:Starting cross validation
2024-10-21 12:40:35,345:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:40:36,416:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:40:36,485:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:40:36,545:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:40:36,549:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:40:36,576:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:40:36,604:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:40:36,649:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:40:36,657:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:40:36,680:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:40:36,710:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 12:40:36,726:INFO:Calculating mean and std
2024-10-21 12:40:36,726:INFO:Creating metrics dataframe
2024-10-21 12:40:36,728:INFO:Uploading results into container
2024-10-21 12:40:36,728:INFO:Uploading model into container now
2024-10-21 12:40:36,728:INFO:_master_model_container: 14
2024-10-21 12:40:36,728:INFO:_display_container: 2
2024-10-21 12:40:36,728:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-10-21 12:40:36,729:INFO:create_model() successfully completed......................................
2024-10-21 12:40:36,828:INFO:SubProcess create_model() end ==================================
2024-10-21 12:40:36,829:INFO:Creating metrics dataframe
2024-10-21 12:40:36,841:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-21 12:40:36,848:INFO:Initializing create_model()
2024-10-21 12:40:36,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:40:36,848:INFO:Checking exceptions
2024-10-21 12:40:36,850:INFO:Importing libraries
2024-10-21 12:40:36,850:INFO:Copying training dataset
2024-10-21 12:40:36,900:INFO:Defining folds
2024-10-21 12:40:36,900:INFO:Declaring metric variables
2024-10-21 12:40:36,900:INFO:Importing untrained model
2024-10-21 12:40:36,900:INFO:Declaring custom model
2024-10-21 12:40:36,900:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-21 12:40:36,901:INFO:Cross validation set to False
2024-10-21 12:40:36,901:INFO:Fitting Model
2024-10-21 12:40:37,327:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-21 12:40:37,332:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.003116 seconds.
2024-10-21 12:40:37,332:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-10-21 12:40:37,332:INFO:[LightGBM] [Info] Total Bins 1368
2024-10-21 12:40:37,332:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 14
2024-10-21 12:40:37,333:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-21 12:40:37,333:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-21 12:40:37,569:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-21 12:40:37,569:INFO:create_model() successfully completed......................................
2024-10-21 12:40:37,709:INFO:_master_model_container: 14
2024-10-21 12:40:37,709:INFO:_display_container: 2
2024-10-21 12:40:37,709:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-21 12:40:37,709:INFO:compare_models() successfully completed......................................
2024-10-21 12:41:14,191:INFO:Initializing create_model()
2024-10-21 12:41:14,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012810A6D310>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 12:41:14,191:INFO:Checking exceptions
2024-10-21 12:41:14,202:INFO:Importing libraries
2024-10-21 12:41:14,202:INFO:Copying training dataset
2024-10-21 12:41:14,249:INFO:Defining folds
2024-10-21 12:41:14,250:INFO:Declaring metric variables
2024-10-21 12:41:14,253:INFO:Importing untrained model
2024-10-21 12:41:14,256:INFO:Random Forest Classifier Imported successfully
2024-10-21 12:41:14,262:INFO:Starting cross validation
2024-10-21 12:41:14,263:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 12:41:33,283:INFO:Calculating mean and std
2024-10-21 12:41:33,285:INFO:Creating metrics dataframe
2024-10-21 12:41:33,292:INFO:Finalizing model
2024-10-21 12:41:36,099:INFO:Uploading results into container
2024-10-21 12:41:36,100:INFO:Uploading model into container now
2024-10-21 12:41:36,114:INFO:_master_model_container: 15
2024-10-21 12:41:36,114:INFO:_display_container: 3
2024-10-21 12:41:36,114:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-21 12:41:36,115:INFO:create_model() successfully completed......................................
2024-10-21 13:07:06,711:INFO:PyCaret ClassificationExperiment
2024-10-21 13:07:06,711:INFO:Logging name: clf-default-name
2024-10-21 13:07:06,711:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-21 13:07:06,711:INFO:version 3.3.2
2024-10-21 13:07:06,711:INFO:Initializing setup()
2024-10-21 13:07:06,711:INFO:self.USI: b43a
2024-10-21 13:07:06,711:INFO:self._variable_keys: {'gpu_n_jobs_param', '_available_plots', 'is_multiclass', 'fold_generator', 'data', 'USI', 'html_param', 'fold_shuffle_param', 'X', 'fix_imbalance', 'idx', 'exp_name_log', 'gpu_param', 'pipeline', 'exp_id', 'n_jobs_param', 'y_test', '_ml_usecase', 'seed', 'X_train', 'fold_groups_param', 'X_test', 'target_param', 'y', 'logging_param', 'log_plots_param', 'memory', 'y_train'}
2024-10-21 13:07:06,711:INFO:Checking environment
2024-10-21 13:07:06,711:INFO:python_version: 3.11.7
2024-10-21 13:07:06,711:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-10-21 13:07:06,711:INFO:machine: AMD64
2024-10-21 13:07:06,711:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-21 13:07:06,718:INFO:Memory: svmem(total=34205937664, available=17776230400, percent=48.0, used=16429707264, free=17776230400)
2024-10-21 13:07:06,718:INFO:Physical Core: 8
2024-10-21 13:07:06,718:INFO:Logical Core: 16
2024-10-21 13:07:06,718:INFO:Checking libraries
2024-10-21 13:07:06,719:INFO:System:
2024-10-21 13:07:06,719:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-10-21 13:07:06,719:INFO:executable: d:\EntregableMLA\TrabajoFinal\Scripts\python.exe
2024-10-21 13:07:06,719:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-21 13:07:06,719:INFO:PyCaret required dependencies:
2024-10-21 13:07:06,719:INFO:                 pip: 23.2.1
2024-10-21 13:07:06,719:INFO:          setuptools: 65.5.0
2024-10-21 13:07:06,719:INFO:             pycaret: 3.3.2
2024-10-21 13:07:06,719:INFO:             IPython: 8.28.0
2024-10-21 13:07:06,719:INFO:          ipywidgets: 8.1.5
2024-10-21 13:07:06,719:INFO:                tqdm: 4.66.5
2024-10-21 13:07:06,719:INFO:               numpy: 1.26.4
2024-10-21 13:07:06,719:INFO:              pandas: 2.1.4
2024-10-21 13:07:06,719:INFO:              jinja2: 3.1.4
2024-10-21 13:07:06,719:INFO:               scipy: 1.11.4
2024-10-21 13:07:06,719:INFO:              joblib: 1.3.2
2024-10-21 13:07:06,719:INFO:             sklearn: 1.4.2
2024-10-21 13:07:06,719:INFO:                pyod: 2.0.2
2024-10-21 13:07:06,719:INFO:            imblearn: 0.12.4
2024-10-21 13:07:06,719:INFO:   category_encoders: 2.6.4
2024-10-21 13:07:06,719:INFO:            lightgbm: 4.5.0
2024-10-21 13:07:06,719:INFO:               numba: 0.60.0
2024-10-21 13:07:06,719:INFO:            requests: 2.32.3
2024-10-21 13:07:06,720:INFO:          matplotlib: 3.7.5
2024-10-21 13:07:06,720:INFO:          scikitplot: 0.3.7
2024-10-21 13:07:06,720:INFO:         yellowbrick: 1.5
2024-10-21 13:07:06,720:INFO:              plotly: 5.24.1
2024-10-21 13:07:06,720:INFO:    plotly-resampler: Not installed
2024-10-21 13:07:06,720:INFO:             kaleido: 0.2.1
2024-10-21 13:07:06,720:INFO:           schemdraw: 0.15
2024-10-21 13:07:06,720:INFO:         statsmodels: 0.14.4
2024-10-21 13:07:06,720:INFO:              sktime: 0.26.0
2024-10-21 13:07:06,720:INFO:               tbats: 1.1.3
2024-10-21 13:07:06,720:INFO:            pmdarima: 2.0.4
2024-10-21 13:07:06,720:INFO:              psutil: 6.1.0
2024-10-21 13:07:06,720:INFO:          markupsafe: 3.0.2
2024-10-21 13:07:06,720:INFO:             pickle5: Not installed
2024-10-21 13:07:06,720:INFO:         cloudpickle: 3.1.0
2024-10-21 13:07:06,720:INFO:         deprecation: 2.1.0
2024-10-21 13:07:06,720:INFO:              xxhash: 3.5.0
2024-10-21 13:07:06,720:INFO:           wurlitzer: Not installed
2024-10-21 13:07:06,720:INFO:PyCaret optional dependencies:
2024-10-21 13:07:06,720:INFO:                shap: Not installed
2024-10-21 13:07:06,720:INFO:           interpret: Not installed
2024-10-21 13:07:06,720:INFO:                umap: Not installed
2024-10-21 13:07:06,720:INFO:     ydata_profiling: Not installed
2024-10-21 13:07:06,720:INFO:  explainerdashboard: Not installed
2024-10-21 13:07:06,720:INFO:             autoviz: Not installed
2024-10-21 13:07:06,720:INFO:           fairlearn: Not installed
2024-10-21 13:07:06,721:INFO:          deepchecks: Not installed
2024-10-21 13:07:06,721:INFO:             xgboost: Not installed
2024-10-21 13:07:06,721:INFO:            catboost: Not installed
2024-10-21 13:07:06,721:INFO:              kmodes: Not installed
2024-10-21 13:07:06,721:INFO:             mlxtend: Not installed
2024-10-21 13:07:06,721:INFO:       statsforecast: Not installed
2024-10-21 13:07:06,721:INFO:        tune_sklearn: Not installed
2024-10-21 13:07:06,721:INFO:                 ray: Not installed
2024-10-21 13:07:06,721:INFO:            hyperopt: 0.2.7
2024-10-21 13:07:06,721:INFO:              optuna: 4.0.0
2024-10-21 13:07:06,721:INFO:               skopt: 0.10.2
2024-10-21 13:07:06,721:INFO:              mlflow: 2.17.0
2024-10-21 13:07:06,721:INFO:              gradio: Not installed
2024-10-21 13:07:06,721:INFO:             fastapi: 0.115.2
2024-10-21 13:07:06,721:INFO:             uvicorn: 0.32.0
2024-10-21 13:07:06,721:INFO:              m2cgen: Not installed
2024-10-21 13:07:06,721:INFO:           evidently: Not installed
2024-10-21 13:07:06,721:INFO:               fugue: Not installed
2024-10-21 13:07:06,721:INFO:           streamlit: Not installed
2024-10-21 13:07:06,721:INFO:             prophet: Not installed
2024-10-21 13:07:06,721:INFO:None
2024-10-21 13:07:06,721:INFO:Set up data.
2024-10-21 13:07:06,791:INFO:Set up folding strategy.
2024-10-21 13:07:06,791:INFO:Set up train/test split.
2024-10-21 13:07:06,856:INFO:Set up index.
2024-10-21 13:07:06,859:INFO:Assigning column types.
2024-10-21 13:07:06,886:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-21 13:07:06,923:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 13:07:06,923:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 13:07:06,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:06,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:06,991:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 13:07:06,992:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 13:07:07,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:07,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:07,015:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-21 13:07:07,059:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 13:07:07,083:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:07,083:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:07,120:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 13:07:07,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:07,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:07,146:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-21 13:07:07,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:07,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:07,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:07,269:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:07,269:INFO:Preparing preprocessing pipeline...
2024-10-21 13:07:07,274:INFO:Set up simple imputation.
2024-10-21 13:07:07,292:INFO:Set up encoding of ordinal features.
2024-10-21 13:07:07,300:INFO:Set up encoding of categorical features.
2024-10-21 13:07:07,560:INFO:Finished creating preprocessing pipeline.
2024-10-21 13:07:07,578:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-21 13:07:07,578:INFO:Creating final display dataframe.
2024-10-21 13:07:08,136:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Exited
2                   Target type            Binary
3           Original data shape      (165034, 14)
4        Transformed data shape      (165034, 14)
5   Transformed train set shape      (115523, 14)
6    Transformed test set shape       (49511, 14)
7               Ignore features                 2
8              Numeric features                 8
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              b43a
2024-10-21 13:07:08,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:08,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:08,274:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:08,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 13:07:08,275:INFO:setup() successfully completed in 1.57s...............
2024-10-21 13:08:38,781:INFO:Initializing create_model()
2024-10-21 13:08:38,782:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 13:08:38,782:INFO:Checking exceptions
2024-10-21 13:08:38,797:INFO:Importing libraries
2024-10-21 13:08:38,797:INFO:Copying training dataset
2024-10-21 13:08:38,842:INFO:Defining folds
2024-10-21 13:08:38,842:INFO:Declaring metric variables
2024-10-21 13:08:38,845:INFO:Importing untrained model
2024-10-21 13:08:38,848:INFO:Random Forest Classifier Imported successfully
2024-10-21 13:08:38,853:INFO:Starting cross validation
2024-10-21 13:08:38,854:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 13:08:59,713:INFO:Calculating mean and std
2024-10-21 13:08:59,714:INFO:Creating metrics dataframe
2024-10-21 13:08:59,720:INFO:Finalizing model
2024-10-21 13:09:01,891:INFO:Uploading results into container
2024-10-21 13:09:01,891:INFO:Uploading model into container now
2024-10-21 13:09:01,899:INFO:_master_model_container: 1
2024-10-21 13:09:01,899:INFO:_display_container: 2
2024-10-21 13:09:01,900:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-21 13:09:01,900:INFO:create_model() successfully completed......................................
2024-10-21 13:10:43,741:INFO:Initializing tune_model()
2024-10-21 13:10:43,741:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'n_estimators': [100], 'max_depth': [10, 20], 'min_samples_split': [2]}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-10-21 13:10:43,742:INFO:Checking exceptions
2024-10-21 13:10:43,784:INFO:Copying training dataset
2024-10-21 13:10:43,809:INFO:Checking base model
2024-10-21 13:10:43,810:INFO:Base model : Random Forest Classifier
2024-10-21 13:10:43,812:INFO:Declaring metric variables
2024-10-21 13:10:43,816:INFO:Defining Hyperparameters
2024-10-21 13:10:43,919:INFO:custom_grid: {'actual_estimator__n_estimators': [100], 'actual_estimator__max_depth': [10, 20], 'actual_estimator__min_samples_split': [2]}
2024-10-21 13:10:43,919:INFO:Tuning with n_jobs=-1
2024-10-21 13:10:43,919:INFO:Initializing GridSearchCV
2024-10-21 13:11:14,201:INFO:best_params: {'actual_estimator__max_depth': 10, 'actual_estimator__min_samples_split': 2, 'actual_estimator__n_estimators': 100}
2024-10-21 13:11:14,202:INFO:Hyperparameter search completed
2024-10-21 13:11:14,202:INFO:SubProcess create_model() called ==================================
2024-10-21 13:11:14,203:INFO:Initializing create_model()
2024-10-21 13:11:14,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012837C62910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'max_depth': 10, 'min_samples_split': 2, 'n_estimators': 100})
2024-10-21 13:11:14,204:INFO:Checking exceptions
2024-10-21 13:11:14,204:INFO:Importing libraries
2024-10-21 13:11:14,204:INFO:Copying training dataset
2024-10-21 13:11:14,250:INFO:Defining folds
2024-10-21 13:11:14,250:INFO:Declaring metric variables
2024-10-21 13:11:14,253:INFO:Importing untrained model
2024-10-21 13:11:14,253:INFO:Declaring custom model
2024-10-21 13:11:14,257:INFO:Random Forest Classifier Imported successfully
2024-10-21 13:11:14,262:INFO:Starting cross validation
2024-10-21 13:11:14,263:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 13:11:26,753:INFO:Calculating mean and std
2024-10-21 13:11:26,753:INFO:Creating metrics dataframe
2024-10-21 13:11:26,759:INFO:Finalizing model
2024-10-21 13:11:28,389:INFO:Uploading results into container
2024-10-21 13:11:28,389:INFO:Uploading model into container now
2024-10-21 13:11:28,390:INFO:_master_model_container: 2
2024-10-21 13:11:28,390:INFO:_display_container: 3
2024-10-21 13:11:28,390:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-21 13:11:28,390:INFO:create_model() successfully completed......................................
2024-10-21 13:11:28,483:INFO:SubProcess create_model() end ==================================
2024-10-21 13:11:28,483:INFO:choose_better activated
2024-10-21 13:11:28,485:INFO:SubProcess create_model() called ==================================
2024-10-21 13:11:28,486:INFO:Initializing create_model()
2024-10-21 13:11:28,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 13:11:28,486:INFO:Checking exceptions
2024-10-21 13:11:28,487:INFO:Importing libraries
2024-10-21 13:11:28,487:INFO:Copying training dataset
2024-10-21 13:11:28,527:INFO:Defining folds
2024-10-21 13:11:28,527:INFO:Declaring metric variables
2024-10-21 13:11:28,527:INFO:Importing untrained model
2024-10-21 13:11:28,527:INFO:Declaring custom model
2024-10-21 13:11:28,528:INFO:Random Forest Classifier Imported successfully
2024-10-21 13:11:28,528:INFO:Starting cross validation
2024-10-21 13:11:28,529:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 13:11:46,617:INFO:Calculating mean and std
2024-10-21 13:11:46,617:INFO:Creating metrics dataframe
2024-10-21 13:11:46,620:INFO:Finalizing model
2024-10-21 13:11:48,861:INFO:Uploading results into container
2024-10-21 13:11:48,862:INFO:Uploading model into container now
2024-10-21 13:11:48,862:INFO:_master_model_container: 3
2024-10-21 13:11:48,862:INFO:_display_container: 4
2024-10-21 13:11:48,862:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-21 13:11:48,862:INFO:create_model() successfully completed......................................
2024-10-21 13:11:48,952:INFO:SubProcess create_model() end ==================================
2024-10-21 13:11:48,952:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8611
2024-10-21 13:11:48,953:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8639
2024-10-21 13:11:48,953:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-10-21 13:11:48,953:INFO:choose_better completed
2024-10-21 13:11:48,960:INFO:_master_model_container: 3
2024-10-21 13:11:48,960:INFO:_display_container: 3
2024-10-21 13:11:48,960:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-21 13:11:48,960:INFO:tune_model() successfully completed......................................
2024-10-21 13:12:07,956:INFO:Initializing plot_model()
2024-10-21 13:12:07,956:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-10-21 13:12:07,957:INFO:Checking exceptions
2024-10-21 13:12:07,992:INFO:Preloading libraries
2024-10-21 13:12:08,009:INFO:Copying training dataset
2024-10-21 13:12:08,009:INFO:Plot type: confusion_matrix
2024-10-21 13:12:08,324:INFO:Fitting Model
2024-10-21 13:12:08,325:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-10-21 13:12:08,326:INFO:Scoring test/hold-out set
2024-10-21 13:12:08,556:INFO:Visual Rendered Successfully
2024-10-21 13:12:08,650:INFO:plot_model() successfully completed......................................
2024-10-21 13:12:18,966:INFO:Initializing evaluate_model()
2024-10-21 13:12:18,966:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-10-21 13:12:18,990:INFO:Initializing plot_model()
2024-10-21 13:12:18,990:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-21 13:12:18,990:INFO:Checking exceptions
2024-10-21 13:12:19,021:INFO:Preloading libraries
2024-10-21 13:12:19,035:INFO:Copying training dataset
2024-10-21 13:12:19,035:INFO:Plot type: pipeline
2024-10-21 13:12:19,169:INFO:Visual Rendered Successfully
2024-10-21 13:12:19,260:INFO:plot_model() successfully completed......................................
2024-10-21 13:12:33,276:INFO:Initializing plot_model()
2024-10-21 13:12:33,277:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=error, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-21 13:12:33,277:INFO:Checking exceptions
2024-10-21 13:12:33,310:INFO:Preloading libraries
2024-10-21 13:12:33,326:INFO:Copying training dataset
2024-10-21 13:12:33,326:INFO:Plot type: error
2024-10-21 13:12:33,627:INFO:Fitting Model
2024-10-21 13:12:33,628:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-10-21 13:12:33,629:INFO:Scoring test/hold-out set
2024-10-21 13:12:33,901:INFO:Visual Rendered Successfully
2024-10-21 13:12:33,995:INFO:plot_model() successfully completed......................................
2024-10-21 13:12:50,385:INFO:Initializing plot_model()
2024-10-21 13:12:50,385:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=ks, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-21 13:12:50,385:INFO:Checking exceptions
2024-10-21 13:12:50,419:INFO:Preloading libraries
2024-10-21 13:12:50,431:INFO:Copying training dataset
2024-10-21 13:12:50,431:INFO:Plot type: ks
2024-10-21 13:12:50,431:INFO:Generating predictions / predict_proba on X_test
2024-10-21 13:12:50,933:INFO:Visual Rendered Successfully
2024-10-21 13:12:51,028:INFO:plot_model() successfully completed......................................
2024-10-21 13:12:54,886:INFO:Initializing plot_model()
2024-10-21 13:12:54,886:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=tree, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-21 13:12:54,886:INFO:Checking exceptions
2024-10-21 13:12:54,920:INFO:Preloading libraries
2024-10-21 13:12:54,933:INFO:Copying training dataset
2024-10-21 13:12:54,933:INFO:Plot type: tree
2024-10-21 13:12:55,969:INFO:Plotting decision trees
2024-10-21 13:13:11,279:INFO:Initializing plot_model()
2024-10-21 13:13:11,279:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=vc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-21 13:13:11,279:INFO:Checking exceptions
2024-10-21 13:13:11,312:INFO:Preloading libraries
2024-10-21 13:13:11,325:INFO:Copying training dataset
2024-10-21 13:13:11,325:INFO:Plot type: vc
2024-10-21 13:13:11,325:INFO:Determining param_name
2024-10-21 13:13:11,325:INFO:param_name: max_depth
2024-10-21 13:13:11,700:INFO:Fitting Model
2024-10-21 13:14:45,273:INFO:Visual Rendered Successfully
2024-10-21 13:14:45,481:INFO:plot_model() successfully completed......................................
2024-10-21 13:14:45,488:INFO:Initializing evaluate_model()
2024-10-21 13:14:45,488:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-10-21 13:14:45,512:INFO:Initializing plot_model()
2024-10-21 13:14:45,512:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-21 13:14:45,512:INFO:Checking exceptions
2024-10-21 13:14:45,544:INFO:Preloading libraries
2024-10-21 13:14:45,558:INFO:Copying training dataset
2024-10-21 13:14:45,558:INFO:Plot type: pipeline
2024-10-21 13:14:45,657:INFO:Visual Rendered Successfully
2024-10-21 13:14:45,875:INFO:plot_model() successfully completed......................................
2024-10-21 13:14:45,891:INFO:Initializing plot_model()
2024-10-21 13:14:45,892:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=error, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-21 13:14:45,892:INFO:Checking exceptions
2024-10-21 13:14:45,939:INFO:Preloading libraries
2024-10-21 13:14:45,950:INFO:Copying training dataset
2024-10-21 13:14:45,951:INFO:Plot type: error
2024-10-21 13:14:46,264:INFO:Fitting Model
2024-10-21 13:14:46,264:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-10-21 13:14:46,265:INFO:Scoring test/hold-out set
2024-10-21 13:14:46,537:INFO:Visual Rendered Successfully
2024-10-21 13:14:46,732:INFO:plot_model() successfully completed......................................
2024-10-21 13:17:10,265:INFO:Initializing plot_model()
2024-10-21 13:17:10,266:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=auc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-21 13:17:10,266:INFO:Checking exceptions
2024-10-21 13:17:10,359:INFO:Preloading libraries
2024-10-21 13:17:10,373:INFO:Copying training dataset
2024-10-21 13:17:10,373:INFO:Plot type: auc
2024-10-21 13:17:10,680:INFO:Fitting Model
2024-10-21 13:17:10,682:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-10-21 13:17:10,683:INFO:Scoring test/hold-out set
2024-10-21 13:17:10,970:INFO:Visual Rendered Successfully
2024-10-21 13:17:11,172:INFO:plot_model() successfully completed......................................
2024-10-21 13:17:22,592:INFO:Initializing finalize_model()
2024-10-21 13:17:22,592:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-10-21 13:17:22,594:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-21 13:17:22,672:INFO:Initializing create_model()
2024-10-21 13:17:22,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 13:17:22,672:INFO:Checking exceptions
2024-10-21 13:17:22,674:INFO:Importing libraries
2024-10-21 13:17:22,674:INFO:Copying training dataset
2024-10-21 13:17:22,678:INFO:Defining folds
2024-10-21 13:17:22,679:INFO:Declaring metric variables
2024-10-21 13:17:22,679:INFO:Importing untrained model
2024-10-21 13:17:22,679:INFO:Declaring custom model
2024-10-21 13:17:22,679:INFO:Random Forest Classifier Imported successfully
2024-10-21 13:17:22,681:INFO:Cross validation set to False
2024-10-21 13:17:22,681:INFO:Fitting Model
2024-10-21 13:17:25,314:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-10-21 13:17:25,314:INFO:create_model() successfully completed......................................
2024-10-21 13:17:25,515:INFO:_master_model_container: 3
2024-10-21 13:17:25,515:INFO:_display_container: 3
2024-10-21 13:17:25,528:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-10-21 13:17:25,528:INFO:finalize_model() successfully completed......................................
2024-10-21 13:18:26,385:INFO:Initializing predict_model()
2024-10-21 13:18:26,385:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012839402CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000128673720C0>)
2024-10-21 13:18:26,385:INFO:Checking exceptions
2024-10-21 13:18:26,385:INFO:Preloading libraries
2024-10-21 13:18:26,387:INFO:Set up data.
2024-10-21 13:18:26,422:INFO:Set up index.
2024-10-21 13:48:00,722:INFO:Initializing save_model()
2024-10-21 13:48:00,722:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=final_dt_model_customer_churn, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-21 13:48:00,722:INFO:Adding model into prep_pipe
2024-10-21 13:48:00,722:WARNING:Only Model saved as it was a pipeline.
2024-10-21 13:48:00,761:INFO:final_dt_model_customer_churn.pkl saved in current working directory
2024-10-21 13:48:00,774:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-10-21 13:48:00,775:INFO:save_model() successfully completed......................................
2024-10-21 13:48:00,879:INFO:Initializing load_model()
2024-10-21 13:48:00,879:INFO:load_model(model_name=final_dt_model_customer_churn, platform=None, authentication=None, verbose=True)
2024-10-21 19:29:04,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 19:29:04,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 19:29:04,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 19:29:04,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 19:33:30,717:INFO:PyCaret RegressionExperiment
2024-10-21 19:33:30,717:INFO:Logging name: CrediCord
2024-10-21 19:33:30,717:INFO:ML Usecase: MLUsecase.REGRESSION
2024-10-21 19:33:30,717:INFO:version 3.3.2
2024-10-21 19:33:30,717:INFO:Initializing setup()
2024-10-21 19:33:30,717:INFO:self.USI: a614
2024-10-21 19:33:30,717:INFO:self._variable_keys: {'log_plots_param', 'y_train', 'fold_generator', 'gpu_n_jobs_param', 'html_param', 'idx', 'exp_name_log', 'X', 'transform_target_param', '_available_plots', 'exp_id', 'memory', 'target_param', 'y', 'y_test', 'seed', 'fold_shuffle_param', 'fold_groups_param', 'pipeline', 'USI', 'X_train', 'data', 'n_jobs_param', 'logging_param', 'gpu_param', '_ml_usecase', 'X_test'}
2024-10-21 19:33:30,717:INFO:Checking environment
2024-10-21 19:33:30,718:INFO:python_version: 3.11.7
2024-10-21 19:33:30,718:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-10-21 19:33:30,718:INFO:machine: AMD64
2024-10-21 19:33:30,718:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-21 19:33:30,722:INFO:Memory: svmem(total=34205937664, available=20807618560, percent=39.2, used=13398319104, free=20807618560)
2024-10-21 19:33:30,722:INFO:Physical Core: 8
2024-10-21 19:33:30,722:INFO:Logical Core: 16
2024-10-21 19:33:30,722:INFO:Checking libraries
2024-10-21 19:33:30,722:INFO:System:
2024-10-21 19:33:30,722:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-10-21 19:33:30,722:INFO:executable: d:\EntregableMLA\TrabajoFinal\Scripts\python.exe
2024-10-21 19:33:30,722:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-21 19:33:30,722:INFO:PyCaret required dependencies:
2024-10-21 19:33:30,961:INFO:                 pip: 23.2.1
2024-10-21 19:33:30,961:INFO:          setuptools: 65.5.0
2024-10-21 19:33:30,961:INFO:             pycaret: 3.3.2
2024-10-21 19:33:30,961:INFO:             IPython: 8.28.0
2024-10-21 19:33:30,961:INFO:          ipywidgets: 8.1.5
2024-10-21 19:33:30,961:INFO:                tqdm: 4.66.5
2024-10-21 19:33:30,961:INFO:               numpy: 1.26.4
2024-10-21 19:33:30,962:INFO:              pandas: 2.1.4
2024-10-21 19:33:30,962:INFO:              jinja2: 3.1.4
2024-10-21 19:33:30,962:INFO:               scipy: 1.11.4
2024-10-21 19:33:30,962:INFO:              joblib: 1.3.2
2024-10-21 19:33:30,962:INFO:             sklearn: 1.4.2
2024-10-21 19:33:30,962:INFO:                pyod: 2.0.2
2024-10-21 19:33:30,962:INFO:            imblearn: 0.12.4
2024-10-21 19:33:30,962:INFO:   category_encoders: 2.6.4
2024-10-21 19:33:30,962:INFO:            lightgbm: 4.5.0
2024-10-21 19:33:30,962:INFO:               numba: 0.60.0
2024-10-21 19:33:30,962:INFO:            requests: 2.32.3
2024-10-21 19:33:30,962:INFO:          matplotlib: 3.7.5
2024-10-21 19:33:30,962:INFO:          scikitplot: 0.3.7
2024-10-21 19:33:30,962:INFO:         yellowbrick: 1.5
2024-10-21 19:33:30,962:INFO:              plotly: 5.24.1
2024-10-21 19:33:30,962:INFO:    plotly-resampler: Not installed
2024-10-21 19:33:30,962:INFO:             kaleido: 0.2.1
2024-10-21 19:33:30,962:INFO:           schemdraw: 0.15
2024-10-21 19:33:30,962:INFO:         statsmodels: 0.14.4
2024-10-21 19:33:30,962:INFO:              sktime: 0.26.0
2024-10-21 19:33:30,962:INFO:               tbats: 1.1.3
2024-10-21 19:33:30,962:INFO:            pmdarima: 2.0.4
2024-10-21 19:33:30,962:INFO:              psutil: 6.1.0
2024-10-21 19:33:30,962:INFO:          markupsafe: 3.0.2
2024-10-21 19:33:30,962:INFO:             pickle5: Not installed
2024-10-21 19:33:30,962:INFO:         cloudpickle: 3.1.0
2024-10-21 19:33:30,962:INFO:         deprecation: 2.1.0
2024-10-21 19:33:30,962:INFO:              xxhash: 3.5.0
2024-10-21 19:33:30,962:INFO:           wurlitzer: Not installed
2024-10-21 19:33:30,963:INFO:PyCaret optional dependencies:
2024-10-21 19:33:31,368:INFO:                shap: Not installed
2024-10-21 19:33:31,368:INFO:           interpret: Not installed
2024-10-21 19:33:31,368:INFO:                umap: Not installed
2024-10-21 19:33:31,368:INFO:     ydata_profiling: Not installed
2024-10-21 19:33:31,368:INFO:  explainerdashboard: Not installed
2024-10-21 19:33:31,368:INFO:             autoviz: Not installed
2024-10-21 19:33:31,368:INFO:           fairlearn: Not installed
2024-10-21 19:33:31,368:INFO:          deepchecks: Not installed
2024-10-21 19:33:31,368:INFO:             xgboost: Not installed
2024-10-21 19:33:31,368:INFO:            catboost: Not installed
2024-10-21 19:33:31,368:INFO:              kmodes: Not installed
2024-10-21 19:33:31,369:INFO:             mlxtend: Not installed
2024-10-21 19:33:31,369:INFO:       statsforecast: Not installed
2024-10-21 19:33:31,369:INFO:        tune_sklearn: Not installed
2024-10-21 19:33:31,369:INFO:                 ray: Not installed
2024-10-21 19:33:31,369:INFO:            hyperopt: 0.2.7
2024-10-21 19:33:31,369:INFO:              optuna: 4.0.0
2024-10-21 19:33:31,369:INFO:               skopt: 0.10.2
2024-10-21 19:33:31,369:INFO:              mlflow: 2.17.0
2024-10-21 19:33:31,369:INFO:              gradio: Not installed
2024-10-21 19:33:31,369:INFO:             fastapi: 0.115.2
2024-10-21 19:33:31,369:INFO:             uvicorn: 0.32.0
2024-10-21 19:33:31,369:INFO:              m2cgen: Not installed
2024-10-21 19:33:31,369:INFO:           evidently: Not installed
2024-10-21 19:33:31,369:INFO:               fugue: Not installed
2024-10-21 19:33:31,369:INFO:           streamlit: Not installed
2024-10-21 19:33:31,369:INFO:             prophet: Not installed
2024-10-21 19:33:31,369:INFO:None
2024-10-21 19:33:31,369:INFO:Set up data.
2024-10-21 19:35:34,651:INFO:PyCaret RegressionExperiment
2024-10-21 19:35:34,651:INFO:Logging name: CrediCord
2024-10-21 19:35:34,651:INFO:ML Usecase: MLUsecase.REGRESSION
2024-10-21 19:35:34,651:INFO:version 3.3.2
2024-10-21 19:35:34,651:INFO:Initializing setup()
2024-10-21 19:35:34,651:INFO:self.USI: a1be
2024-10-21 19:35:34,651:INFO:self._variable_keys: {'log_plots_param', 'y_train', 'fold_generator', 'gpu_n_jobs_param', 'html_param', 'idx', 'exp_name_log', 'X', 'transform_target_param', '_available_plots', 'exp_id', 'memory', 'target_param', 'y', 'y_test', 'seed', 'fold_shuffle_param', 'fold_groups_param', 'pipeline', 'USI', 'X_train', 'data', 'n_jobs_param', 'logging_param', 'gpu_param', '_ml_usecase', 'X_test'}
2024-10-21 19:35:34,651:INFO:Checking environment
2024-10-21 19:35:34,651:INFO:python_version: 3.11.7
2024-10-21 19:35:34,651:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-10-21 19:35:34,651:INFO:machine: AMD64
2024-10-21 19:35:34,651:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-21 19:35:34,655:INFO:Memory: svmem(total=34205937664, available=20363890688, percent=40.5, used=13842046976, free=20363890688)
2024-10-21 19:35:34,656:INFO:Physical Core: 8
2024-10-21 19:35:34,656:INFO:Logical Core: 16
2024-10-21 19:35:34,656:INFO:Checking libraries
2024-10-21 19:35:34,656:INFO:System:
2024-10-21 19:35:34,656:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-10-21 19:35:34,656:INFO:executable: d:\EntregableMLA\TrabajoFinal\Scripts\python.exe
2024-10-21 19:35:34,656:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-21 19:35:34,656:INFO:PyCaret required dependencies:
2024-10-21 19:35:34,656:INFO:                 pip: 23.2.1
2024-10-21 19:35:34,656:INFO:          setuptools: 65.5.0
2024-10-21 19:35:34,656:INFO:             pycaret: 3.3.2
2024-10-21 19:35:34,656:INFO:             IPython: 8.28.0
2024-10-21 19:35:34,656:INFO:          ipywidgets: 8.1.5
2024-10-21 19:35:34,656:INFO:                tqdm: 4.66.5
2024-10-21 19:35:34,656:INFO:               numpy: 1.26.4
2024-10-21 19:35:34,656:INFO:              pandas: 2.1.4
2024-10-21 19:35:34,656:INFO:              jinja2: 3.1.4
2024-10-21 19:35:34,656:INFO:               scipy: 1.11.4
2024-10-21 19:35:34,656:INFO:              joblib: 1.3.2
2024-10-21 19:35:34,656:INFO:             sklearn: 1.4.2
2024-10-21 19:35:34,657:INFO:                pyod: 2.0.2
2024-10-21 19:35:34,657:INFO:            imblearn: 0.12.4
2024-10-21 19:35:34,657:INFO:   category_encoders: 2.6.4
2024-10-21 19:35:34,657:INFO:            lightgbm: 4.5.0
2024-10-21 19:35:34,657:INFO:               numba: 0.60.0
2024-10-21 19:35:34,657:INFO:            requests: 2.32.3
2024-10-21 19:35:34,657:INFO:          matplotlib: 3.7.5
2024-10-21 19:35:34,657:INFO:          scikitplot: 0.3.7
2024-10-21 19:35:34,657:INFO:         yellowbrick: 1.5
2024-10-21 19:35:34,657:INFO:              plotly: 5.24.1
2024-10-21 19:35:34,657:INFO:    plotly-resampler: Not installed
2024-10-21 19:35:34,657:INFO:             kaleido: 0.2.1
2024-10-21 19:35:34,657:INFO:           schemdraw: 0.15
2024-10-21 19:35:34,657:INFO:         statsmodels: 0.14.4
2024-10-21 19:35:34,657:INFO:              sktime: 0.26.0
2024-10-21 19:35:34,657:INFO:               tbats: 1.1.3
2024-10-21 19:35:34,657:INFO:            pmdarima: 2.0.4
2024-10-21 19:35:34,657:INFO:              psutil: 6.1.0
2024-10-21 19:35:34,657:INFO:          markupsafe: 3.0.2
2024-10-21 19:35:34,657:INFO:             pickle5: Not installed
2024-10-21 19:35:34,657:INFO:         cloudpickle: 3.1.0
2024-10-21 19:35:34,657:INFO:         deprecation: 2.1.0
2024-10-21 19:35:34,657:INFO:              xxhash: 3.5.0
2024-10-21 19:35:34,657:INFO:           wurlitzer: Not installed
2024-10-21 19:35:34,657:INFO:PyCaret optional dependencies:
2024-10-21 19:35:34,658:INFO:                shap: Not installed
2024-10-21 19:35:34,658:INFO:           interpret: Not installed
2024-10-21 19:35:34,658:INFO:                umap: Not installed
2024-10-21 19:35:34,658:INFO:     ydata_profiling: Not installed
2024-10-21 19:35:34,658:INFO:  explainerdashboard: Not installed
2024-10-21 19:35:34,658:INFO:             autoviz: Not installed
2024-10-21 19:35:34,658:INFO:           fairlearn: Not installed
2024-10-21 19:35:34,658:INFO:          deepchecks: Not installed
2024-10-21 19:35:34,658:INFO:             xgboost: Not installed
2024-10-21 19:35:34,658:INFO:            catboost: Not installed
2024-10-21 19:35:34,658:INFO:              kmodes: Not installed
2024-10-21 19:35:34,658:INFO:             mlxtend: Not installed
2024-10-21 19:35:34,658:INFO:       statsforecast: Not installed
2024-10-21 19:35:34,658:INFO:        tune_sklearn: Not installed
2024-10-21 19:35:34,658:INFO:                 ray: Not installed
2024-10-21 19:35:34,658:INFO:            hyperopt: 0.2.7
2024-10-21 19:35:34,658:INFO:              optuna: 4.0.0
2024-10-21 19:35:34,658:INFO:               skopt: 0.10.2
2024-10-21 19:35:34,658:INFO:              mlflow: 2.17.0
2024-10-21 19:35:34,658:INFO:              gradio: Not installed
2024-10-21 19:35:34,658:INFO:             fastapi: 0.115.2
2024-10-21 19:35:34,658:INFO:             uvicorn: 0.32.0
2024-10-21 19:35:34,658:INFO:              m2cgen: Not installed
2024-10-21 19:35:34,658:INFO:           evidently: Not installed
2024-10-21 19:35:34,658:INFO:               fugue: Not installed
2024-10-21 19:35:34,658:INFO:           streamlit: Not installed
2024-10-21 19:35:34,658:INFO:             prophet: Not installed
2024-10-21 19:35:34,659:INFO:None
2024-10-21 19:35:34,659:INFO:Set up data.
2024-10-21 19:35:34,818:INFO:Set up folding strategy.
2024-10-21 19:35:34,818:INFO:Set up train/test split.
2024-10-21 19:35:34,885:INFO:Set up index.
2024-10-21 19:35:34,889:INFO:Assigning column types.
2024-10-21 19:35:34,918:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-21 19:35:34,918:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-10-21 19:35:34,922:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-21 19:35:34,926:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,004:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,039:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,040:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,040:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,044:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,047:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,122:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,157:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,158:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-10-21 19:35:35,162:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,166:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,241:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,281:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,284:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,365:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,401:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,402:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,402:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,402:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-10-21 19:35:35,410:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,483:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,518:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,526:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,600:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,635:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,636:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-10-21 19:35:35,716:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,752:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,752:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,834:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,872:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,873:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-21 19:35:35,953:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:35:35,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:35,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:36,069:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:35:36,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:36,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:36,106:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-10-21 19:35:36,223:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:36,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:36,340:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:36,340:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:36,341:INFO:Preparing preprocessing pipeline...
2024-10-21 19:35:36,341:INFO:Set up simple imputation.
2024-10-21 19:35:36,360:INFO:Set up encoding of ordinal features.
2024-10-21 19:35:36,369:INFO:Set up encoding of categorical features.
2024-10-21 19:35:36,708:INFO:Finished creating preprocessing pipeline.
2024-10-21 19:35:36,734:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['CustomerId', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary', 'Exited'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Geography', 'Gender'],
                                    tr...
                 TransformerWrapper(include=['Gender'],
                                    transformer=OrdinalEncoder(cols=['Gender'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2024-10-21 19:35:36,734:INFO:Creating final display dataframe.
2024-10-21 19:35:37,341:INFO:Setup _display_container:                     Description         Value
0                    Session id           123
1                        Target   CreditScore
2                   Target type    Regression
3           Original data shape  (165034, 14)
4        Transformed data shape  (165034, 14)
5   Transformed train set shape  (115523, 14)
6    Transformed test set shape   (49511, 14)
7               Ignore features             2
8              Numeric features             9
9          Categorical features             2
10                   Preprocess          True
11              Imputation type        simple
12           Numeric imputation          mean
13       Categorical imputation          mode
14     Maximum one-hot encoding            25
15              Encoding method          None
16               Fold Generator         KFold
17                  Fold Number            10
18                     CPU Jobs            -1
19                      Use GPU         False
20               Log Experiment  MlflowLogger
21              Experiment Name     CrediCord
22                          USI          a1be
2024-10-21 19:35:37,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:37,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:37,603:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:37,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:35:37,603:INFO:Logging experiment in loggers
2024-10-21 19:35:38,004:INFO:SubProcess save_model() called ==================================
2024-10-21 19:35:38,036:INFO:Initializing save_model()
2024-10-21 19:35:38,036:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['CustomerId', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary', 'Exited'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Geography', 'Gender'],
                                    tr...
                 TransformerWrapper(include=['Gender'],
                                    transformer=OrdinalEncoder(cols=['Gender'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), model_name=C:\Users\admin\AppData\Local\Temp\tmp4l5hlm7g\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['CustomerId', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary', 'Exited'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Geography', 'Gender'],
                                    tr...
                 TransformerWrapper(include=['Gender'],
                                    transformer=OrdinalEncoder(cols=['Gender'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-10-21 19:35:38,036:INFO:Adding model into prep_pipe
2024-10-21 19:35:38,036:WARNING:Only Model saved as it was a pipeline.
2024-10-21 19:35:38,040:INFO:C:\Users\admin\AppData\Local\Temp\tmp4l5hlm7g\Transformation Pipeline.pkl saved in current working directory
2024-10-21 19:35:38,056:INFO:Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['CustomerId', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary', 'Exited'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Geography', 'Gender'],
                                    tr...
                 TransformerWrapper(include=['Gender'],
                                    transformer=OrdinalEncoder(cols=['Gender'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2024-10-21 19:35:38,056:INFO:save_model() successfully completed......................................
2024-10-21 19:35:38,149:INFO:SubProcess save_model() end ==================================
2024-10-21 19:35:38,777:INFO:setup() successfully completed in 2.95s...............
2024-10-21 19:47:36,620:INFO:PyCaret RegressionExperiment
2024-10-21 19:47:36,620:INFO:Logging name: CrediCord
2024-10-21 19:47:36,620:INFO:ML Usecase: MLUsecase.REGRESSION
2024-10-21 19:47:36,620:INFO:version 3.3.2
2024-10-21 19:47:36,620:INFO:Initializing setup()
2024-10-21 19:47:36,620:INFO:self.USI: 9692
2024-10-21 19:47:36,620:INFO:self._variable_keys: {'log_plots_param', 'y_train', 'fold_generator', 'gpu_n_jobs_param', 'html_param', 'idx', 'exp_name_log', 'X', 'transform_target_param', '_available_plots', 'exp_id', 'memory', 'target_param', 'y', 'y_test', 'seed', 'fold_shuffle_param', 'fold_groups_param', 'pipeline', 'USI', 'X_train', 'data', 'n_jobs_param', 'logging_param', 'gpu_param', '_ml_usecase', 'X_test'}
2024-10-21 19:47:36,620:INFO:Checking environment
2024-10-21 19:47:36,620:INFO:python_version: 3.11.7
2024-10-21 19:47:36,620:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-10-21 19:47:36,621:INFO:machine: AMD64
2024-10-21 19:47:36,621:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-21 19:47:36,625:INFO:Memory: svmem(total=34205937664, available=20461813760, percent=40.2, used=13744123904, free=20461813760)
2024-10-21 19:47:36,625:INFO:Physical Core: 8
2024-10-21 19:47:36,625:INFO:Logical Core: 16
2024-10-21 19:47:36,625:INFO:Checking libraries
2024-10-21 19:47:36,625:INFO:System:
2024-10-21 19:47:36,625:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-10-21 19:47:36,625:INFO:executable: d:\EntregableMLA\TrabajoFinal\Scripts\python.exe
2024-10-21 19:47:36,625:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-21 19:47:36,625:INFO:PyCaret required dependencies:
2024-10-21 19:47:36,626:INFO:                 pip: 23.2.1
2024-10-21 19:47:36,626:INFO:          setuptools: 65.5.0
2024-10-21 19:47:36,626:INFO:             pycaret: 3.3.2
2024-10-21 19:47:36,626:INFO:             IPython: 8.28.0
2024-10-21 19:47:36,626:INFO:          ipywidgets: 8.1.5
2024-10-21 19:47:36,626:INFO:                tqdm: 4.66.5
2024-10-21 19:47:36,626:INFO:               numpy: 1.26.4
2024-10-21 19:47:36,626:INFO:              pandas: 2.1.4
2024-10-21 19:47:36,626:INFO:              jinja2: 3.1.4
2024-10-21 19:47:36,626:INFO:               scipy: 1.11.4
2024-10-21 19:47:36,626:INFO:              joblib: 1.3.2
2024-10-21 19:47:36,626:INFO:             sklearn: 1.4.2
2024-10-21 19:47:36,626:INFO:                pyod: 2.0.2
2024-10-21 19:47:36,626:INFO:            imblearn: 0.12.4
2024-10-21 19:47:36,626:INFO:   category_encoders: 2.6.4
2024-10-21 19:47:36,626:INFO:            lightgbm: 4.5.0
2024-10-21 19:47:36,626:INFO:               numba: 0.60.0
2024-10-21 19:47:36,626:INFO:            requests: 2.32.3
2024-10-21 19:47:36,626:INFO:          matplotlib: 3.7.5
2024-10-21 19:47:36,626:INFO:          scikitplot: 0.3.7
2024-10-21 19:47:36,626:INFO:         yellowbrick: 1.5
2024-10-21 19:47:36,626:INFO:              plotly: 5.24.1
2024-10-21 19:47:36,626:INFO:    plotly-resampler: Not installed
2024-10-21 19:47:36,626:INFO:             kaleido: 0.2.1
2024-10-21 19:47:36,626:INFO:           schemdraw: 0.15
2024-10-21 19:47:36,627:INFO:         statsmodels: 0.14.4
2024-10-21 19:47:36,627:INFO:              sktime: 0.26.0
2024-10-21 19:47:36,627:INFO:               tbats: 1.1.3
2024-10-21 19:47:36,627:INFO:            pmdarima: 2.0.4
2024-10-21 19:47:36,627:INFO:              psutil: 6.1.0
2024-10-21 19:47:36,627:INFO:          markupsafe: 3.0.2
2024-10-21 19:47:36,627:INFO:             pickle5: Not installed
2024-10-21 19:47:36,627:INFO:         cloudpickle: 3.1.0
2024-10-21 19:47:36,627:INFO:         deprecation: 2.1.0
2024-10-21 19:47:36,627:INFO:              xxhash: 3.5.0
2024-10-21 19:47:36,627:INFO:           wurlitzer: Not installed
2024-10-21 19:47:36,627:INFO:PyCaret optional dependencies:
2024-10-21 19:47:36,627:INFO:                shap: Not installed
2024-10-21 19:47:36,627:INFO:           interpret: Not installed
2024-10-21 19:47:36,627:INFO:                umap: Not installed
2024-10-21 19:47:36,627:INFO:     ydata_profiling: Not installed
2024-10-21 19:47:36,627:INFO:  explainerdashboard: Not installed
2024-10-21 19:47:36,627:INFO:             autoviz: Not installed
2024-10-21 19:47:36,627:INFO:           fairlearn: Not installed
2024-10-21 19:47:36,627:INFO:          deepchecks: Not installed
2024-10-21 19:47:36,627:INFO:             xgboost: Not installed
2024-10-21 19:47:36,627:INFO:            catboost: Not installed
2024-10-21 19:47:36,627:INFO:              kmodes: Not installed
2024-10-21 19:47:36,627:INFO:             mlxtend: Not installed
2024-10-21 19:47:36,627:INFO:       statsforecast: Not installed
2024-10-21 19:47:36,627:INFO:        tune_sklearn: Not installed
2024-10-21 19:47:36,627:INFO:                 ray: Not installed
2024-10-21 19:47:36,628:INFO:            hyperopt: 0.2.7
2024-10-21 19:47:36,628:INFO:              optuna: 4.0.0
2024-10-21 19:47:36,628:INFO:               skopt: 0.10.2
2024-10-21 19:47:36,628:INFO:              mlflow: 2.17.0
2024-10-21 19:47:36,628:INFO:              gradio: Not installed
2024-10-21 19:47:36,628:INFO:             fastapi: 0.115.2
2024-10-21 19:47:36,628:INFO:             uvicorn: 0.32.0
2024-10-21 19:47:36,628:INFO:              m2cgen: Not installed
2024-10-21 19:47:36,628:INFO:           evidently: Not installed
2024-10-21 19:47:36,628:INFO:               fugue: Not installed
2024-10-21 19:47:36,628:INFO:           streamlit: Not installed
2024-10-21 19:47:36,628:INFO:             prophet: Not installed
2024-10-21 19:47:36,628:INFO:None
2024-10-21 19:47:36,628:INFO:Set up data.
2024-10-21 19:47:36,692:INFO:Set up folding strategy.
2024-10-21 19:47:36,692:INFO:Set up train/test split.
2024-10-21 19:47:36,723:INFO:Set up index.
2024-10-21 19:47:36,726:INFO:Assigning column types.
2024-10-21 19:47:36,755:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-21 19:47:36,756:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-10-21 19:47:36,760:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-21 19:47:36,763:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-21 19:47:36,836:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:47:36,871:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:47:36,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:36,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:36,872:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-10-21 19:47:36,876:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-21 19:47:36,880:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-21 19:47:36,956:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:47:36,992:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:47:36,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:36,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:36,993:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-10-21 19:47:36,997:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,000:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,074:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,109:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,110:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,110:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,114:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,117:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,192:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,227:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,227:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,227:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,228:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-10-21 19:47:37,235:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,310:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,346:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,347:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,354:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,430:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,466:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,467:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-10-21 19:47:37,547:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,584:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,668:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,703:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,704:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-21 19:47:37,786:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,902:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-21 19:47:37,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:37,939:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-10-21 19:47:38,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:38,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:38,175:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:38,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:38,176:INFO:Preparing preprocessing pipeline...
2024-10-21 19:47:38,176:INFO:Set up simple imputation.
2024-10-21 19:47:38,200:INFO:Set up encoding of ordinal features.
2024-10-21 19:47:38,210:INFO:Set up encoding of categorical features.
2024-10-21 19:47:38,478:INFO:Finished creating preprocessing pipeline.
2024-10-21 19:47:38,495:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['CustomerId', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary', 'Exited'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Geography', 'Gender'],
                                    tr...
                 TransformerWrapper(include=['Gender'],
                                    transformer=OrdinalEncoder(cols=['Gender'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2024-10-21 19:47:38,496:INFO:Creating final display dataframe.
2024-10-21 19:47:38,817:INFO:Setup _display_container:                     Description         Value
0                    Session id           123
1                        Target   CreditScore
2                   Target type    Regression
3           Original data shape  (165034, 14)
4        Transformed data shape  (165034, 14)
5   Transformed train set shape  (115523, 14)
6    Transformed test set shape   (49511, 14)
7               Ignore features             2
8              Numeric features             9
9          Categorical features             2
10                   Preprocess          True
11              Imputation type        simple
12           Numeric imputation          mean
13       Categorical imputation          mode
14     Maximum one-hot encoding            25
15              Encoding method          None
16               Fold Generator         KFold
17                  Fold Number            10
18                     CPU Jobs            -1
19                      Use GPU         False
20               Log Experiment  MlflowLogger
21              Experiment Name     CrediCord
22                          USI          9692
2024-10-21 19:47:38,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:38,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:39,062:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:39,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:47:39,063:INFO:Logging experiment in loggers
2024-10-21 19:53:04,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 19:53:04,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 19:53:04,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 19:53:04,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 19:53:05,249:INFO:PyCaret ClassificationExperiment
2024-10-21 19:53:05,249:INFO:Logging name: CrediCorp
2024-10-21 19:53:05,250:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-21 19:53:05,250:INFO:version 3.3.2
2024-10-21 19:53:05,250:INFO:Initializing setup()
2024-10-21 19:53:05,250:INFO:self.USI: 3aa4
2024-10-21 19:53:05,250:INFO:self._variable_keys: {'USI', 'exp_id', 'X_test', 'y_test', 'idx', 'html_param', 'exp_name_log', 'n_jobs_param', 'fix_imbalance', 'X', 'seed', 'target_param', 'data', 'gpu_param', 'logging_param', 'X_train', 'fold_groups_param', '_available_plots', 'fold_generator', 'y_train', 'fold_shuffle_param', 'gpu_n_jobs_param', 'y', 'is_multiclass', 'pipeline', '_ml_usecase', 'log_plots_param', 'memory'}
2024-10-21 19:53:05,250:INFO:Checking environment
2024-10-21 19:53:05,250:INFO:python_version: 3.11.7
2024-10-21 19:53:05,250:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-10-21 19:53:05,250:INFO:machine: AMD64
2024-10-21 19:53:05,250:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-21 19:53:05,255:INFO:Memory: svmem(total=34205937664, available=20047441920, percent=41.4, used=14158495744, free=20047441920)
2024-10-21 19:53:05,255:INFO:Physical Core: 8
2024-10-21 19:53:05,255:INFO:Logical Core: 16
2024-10-21 19:53:05,255:INFO:Checking libraries
2024-10-21 19:53:05,255:INFO:System:
2024-10-21 19:53:05,255:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-10-21 19:53:05,255:INFO:executable: d:\EntregableMLA\TrabajoFinal\Scripts\python.exe
2024-10-21 19:53:05,255:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-21 19:53:05,255:INFO:PyCaret required dependencies:
2024-10-21 19:53:05,275:INFO:                 pip: 23.2.1
2024-10-21 19:53:05,275:INFO:          setuptools: 65.5.0
2024-10-21 19:53:05,275:INFO:             pycaret: 3.3.2
2024-10-21 19:53:05,275:INFO:             IPython: 8.28.0
2024-10-21 19:53:05,275:INFO:          ipywidgets: 8.1.5
2024-10-21 19:53:05,276:INFO:                tqdm: 4.66.5
2024-10-21 19:53:05,276:INFO:               numpy: 1.26.4
2024-10-21 19:53:05,276:INFO:              pandas: 2.1.4
2024-10-21 19:53:05,276:INFO:              jinja2: 3.1.4
2024-10-21 19:53:05,276:INFO:               scipy: 1.11.4
2024-10-21 19:53:05,276:INFO:              joblib: 1.3.2
2024-10-21 19:53:05,276:INFO:             sklearn: 1.4.2
2024-10-21 19:53:05,276:INFO:                pyod: 2.0.2
2024-10-21 19:53:05,276:INFO:            imblearn: 0.12.4
2024-10-21 19:53:05,276:INFO:   category_encoders: 2.6.4
2024-10-21 19:53:05,276:INFO:            lightgbm: 4.5.0
2024-10-21 19:53:05,276:INFO:               numba: 0.60.0
2024-10-21 19:53:05,276:INFO:            requests: 2.32.3
2024-10-21 19:53:05,276:INFO:          matplotlib: 3.7.5
2024-10-21 19:53:05,276:INFO:          scikitplot: 0.3.7
2024-10-21 19:53:05,276:INFO:         yellowbrick: 1.5
2024-10-21 19:53:05,276:INFO:              plotly: 5.24.1
2024-10-21 19:53:05,276:INFO:    plotly-resampler: Not installed
2024-10-21 19:53:05,276:INFO:             kaleido: 0.2.1
2024-10-21 19:53:05,276:INFO:           schemdraw: 0.15
2024-10-21 19:53:05,276:INFO:         statsmodels: 0.14.4
2024-10-21 19:53:05,276:INFO:              sktime: 0.26.0
2024-10-21 19:53:05,276:INFO:               tbats: 1.1.3
2024-10-21 19:53:05,276:INFO:            pmdarima: 2.0.4
2024-10-21 19:53:05,276:INFO:              psutil: 6.1.0
2024-10-21 19:53:05,276:INFO:          markupsafe: 3.0.2
2024-10-21 19:53:05,276:INFO:             pickle5: Not installed
2024-10-21 19:53:05,276:INFO:         cloudpickle: 3.1.0
2024-10-21 19:53:05,277:INFO:         deprecation: 2.1.0
2024-10-21 19:53:05,277:INFO:              xxhash: 3.5.0
2024-10-21 19:53:05,277:INFO:           wurlitzer: Not installed
2024-10-21 19:53:05,277:INFO:PyCaret optional dependencies:
2024-10-21 19:53:05,626:INFO:                shap: Not installed
2024-10-21 19:53:05,626:INFO:           interpret: Not installed
2024-10-21 19:53:05,626:INFO:                umap: Not installed
2024-10-21 19:53:05,626:INFO:     ydata_profiling: Not installed
2024-10-21 19:53:05,626:INFO:  explainerdashboard: Not installed
2024-10-21 19:53:05,626:INFO:             autoviz: Not installed
2024-10-21 19:53:05,626:INFO:           fairlearn: Not installed
2024-10-21 19:53:05,626:INFO:          deepchecks: Not installed
2024-10-21 19:53:05,626:INFO:             xgboost: Not installed
2024-10-21 19:53:05,626:INFO:            catboost: Not installed
2024-10-21 19:53:05,626:INFO:              kmodes: Not installed
2024-10-21 19:53:05,626:INFO:             mlxtend: Not installed
2024-10-21 19:53:05,626:INFO:       statsforecast: Not installed
2024-10-21 19:53:05,626:INFO:        tune_sklearn: Not installed
2024-10-21 19:53:05,626:INFO:                 ray: Not installed
2024-10-21 19:53:05,626:INFO:            hyperopt: 0.2.7
2024-10-21 19:53:05,627:INFO:              optuna: 4.0.0
2024-10-21 19:53:05,627:INFO:               skopt: 0.10.2
2024-10-21 19:53:05,627:INFO:              mlflow: 2.17.0
2024-10-21 19:53:05,627:INFO:              gradio: Not installed
2024-10-21 19:53:05,627:INFO:             fastapi: 0.115.2
2024-10-21 19:53:05,627:INFO:             uvicorn: 0.32.0
2024-10-21 19:53:05,627:INFO:              m2cgen: Not installed
2024-10-21 19:53:05,627:INFO:           evidently: Not installed
2024-10-21 19:53:05,627:INFO:               fugue: Not installed
2024-10-21 19:53:05,627:INFO:           streamlit: Not installed
2024-10-21 19:53:05,627:INFO:             prophet: Not installed
2024-10-21 19:53:05,627:INFO:None
2024-10-21 19:53:05,627:INFO:Set up data.
2024-10-21 19:53:05,693:INFO:Set up folding strategy.
2024-10-21 19:53:05,693:INFO:Set up train/test split.
2024-10-21 19:53:05,773:INFO:Set up index.
2024-10-21 19:53:05,778:INFO:Assigning column types.
2024-10-21 19:53:05,804:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-21 19:53:05,840:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:53:05,847:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 19:53:05,909:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:05,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:05,952:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 19:53:05,953:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 19:53:05,978:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:05,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:05,978:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-21 19:53:06,014:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 19:53:06,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:06,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:06,072:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 19:53:06,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:06,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:06,096:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-21 19:53:06,153:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:06,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:06,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:06,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:06,212:INFO:Preparing preprocessing pipeline...
2024-10-21 19:53:06,219:INFO:Set up simple imputation.
2024-10-21 19:53:06,235:INFO:Set up encoding of ordinal features.
2024-10-21 19:53:06,245:INFO:Set up encoding of categorical features.
2024-10-21 19:53:06,520:INFO:Finished creating preprocessing pipeline.
2024-10-21 19:53:06,533:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-21 19:53:06,533:INFO:Creating final display dataframe.
2024-10-21 19:53:06,949:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target           Exited
2                   Target type           Binary
3           Original data shape     (165034, 14)
4        Transformed data shape     (165034, 14)
5   Transformed train set shape     (115523, 14)
6    Transformed test set shape      (49511, 14)
7               Ignore features                2
8              Numeric features                8
9          Categorical features                2
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16               Fold Generator  StratifiedKFold
17                  Fold Number               10
18                     CPU Jobs               -1
19                      Use GPU            False
20               Log Experiment     MlflowLogger
21              Experiment Name        CrediCorp
22                          USI             3aa4
2024-10-21 19:53:07,013:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:07,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:07,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:07,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 19:53:07,075:INFO:Logging experiment in loggers
2024-10-21 19:53:07,203:INFO:SubProcess save_model() called ==================================
2024-10-21 19:53:07,227:INFO:Initializing save_model()
2024-10-21 19:53:07,227:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\admin\AppData\Local\Temp\tmp6n_zg41o\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-21 19:53:07,227:INFO:Adding model into prep_pipe
2024-10-21 19:53:07,227:WARNING:Only Model saved as it was a pipeline.
2024-10-21 19:53:07,231:INFO:C:\Users\admin\AppData\Local\Temp\tmp6n_zg41o\Transformation Pipeline.pkl saved in current working directory
2024-10-21 19:53:07,243:INFO:Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-21 19:53:07,243:INFO:save_model() successfully completed......................................
2024-10-21 19:53:07,331:INFO:SubProcess save_model() end ==================================
2024-10-21 19:53:07,368:INFO:setup() successfully completed in 1.83s...............
2024-10-21 19:58:38,044:INFO:Initializing compare_models()
2024-10-21 19:58:38,044:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-21 19:58:38,044:INFO:Checking exceptions
2024-10-21 19:58:38,074:INFO:Preparing display monitor
2024-10-21 19:58:38,091:INFO:Initializing Logistic Regression
2024-10-21 19:58:38,091:INFO:Total runtime is 0.0 minutes
2024-10-21 19:58:38,093:INFO:SubProcess create_model() called ==================================
2024-10-21 19:58:38,094:INFO:Initializing create_model()
2024-10-21 19:58:38,094:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268F67C990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 19:58:38,094:INFO:Checking exceptions
2024-10-21 19:58:38,094:INFO:Importing libraries
2024-10-21 19:58:38,094:INFO:Copying training dataset
2024-10-21 19:58:38,140:INFO:Defining folds
2024-10-21 19:58:38,140:INFO:Declaring metric variables
2024-10-21 19:58:38,143:INFO:Importing untrained model
2024-10-21 19:58:38,146:INFO:Logistic Regression Imported successfully
2024-10-21 19:58:38,153:INFO:Starting cross validation
2024-10-21 19:58:38,155:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 19:58:48,990:INFO:Calculating mean and std
2024-10-21 19:58:48,991:INFO:Creating metrics dataframe
2024-10-21 19:58:48,992:INFO:Uploading results into container
2024-10-21 19:58:48,993:INFO:Uploading model into container now
2024-10-21 19:58:48,993:INFO:_master_model_container: 1
2024-10-21 19:58:48,993:INFO:_display_container: 2
2024-10-21 19:58:48,994:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-21 19:58:48,994:INFO:create_model() successfully completed......................................
2024-10-21 19:58:49,088:INFO:SubProcess create_model() end ==================================
2024-10-21 19:58:49,088:INFO:Creating metrics dataframe
2024-10-21 19:58:49,094:INFO:Initializing K Neighbors Classifier
2024-10-21 19:58:49,094:INFO:Total runtime is 0.18337574402491252 minutes
2024-10-21 19:58:49,097:INFO:SubProcess create_model() called ==================================
2024-10-21 19:58:49,097:INFO:Initializing create_model()
2024-10-21 19:58:49,097:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268F67C990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 19:58:49,097:INFO:Checking exceptions
2024-10-21 19:58:49,097:INFO:Importing libraries
2024-10-21 19:58:49,097:INFO:Copying training dataset
2024-10-21 19:58:49,143:INFO:Defining folds
2024-10-21 19:58:49,143:INFO:Declaring metric variables
2024-10-21 19:58:49,146:INFO:Importing untrained model
2024-10-21 19:58:49,148:INFO:K Neighbors Classifier Imported successfully
2024-10-21 19:58:49,154:INFO:Starting cross validation
2024-10-21 19:58:49,155:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 19:58:53,788:INFO:Calculating mean and std
2024-10-21 19:58:53,788:INFO:Creating metrics dataframe
2024-10-21 19:58:53,791:INFO:Uploading results into container
2024-10-21 19:58:53,791:INFO:Uploading model into container now
2024-10-21 19:58:53,792:INFO:_master_model_container: 2
2024-10-21 19:58:53,792:INFO:_display_container: 2
2024-10-21 19:58:53,792:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-21 19:58:53,792:INFO:create_model() successfully completed......................................
2024-10-21 19:58:53,895:INFO:SubProcess create_model() end ==================================
2024-10-21 19:58:53,895:INFO:Creating metrics dataframe
2024-10-21 19:58:53,901:INFO:Initializing Naive Bayes
2024-10-21 19:58:53,901:INFO:Total runtime is 0.26349995136260984 minutes
2024-10-21 19:58:53,904:INFO:SubProcess create_model() called ==================================
2024-10-21 19:58:53,904:INFO:Initializing create_model()
2024-10-21 19:58:53,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268F67C990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 19:58:53,904:INFO:Checking exceptions
2024-10-21 19:58:53,904:INFO:Importing libraries
2024-10-21 19:58:53,904:INFO:Copying training dataset
2024-10-21 19:58:53,948:INFO:Defining folds
2024-10-21 19:58:53,949:INFO:Declaring metric variables
2024-10-21 19:58:53,952:INFO:Importing untrained model
2024-10-21 19:58:53,954:INFO:Naive Bayes Imported successfully
2024-10-21 19:58:53,958:INFO:Starting cross validation
2024-10-21 19:58:53,959:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 19:58:55,167:INFO:Calculating mean and std
2024-10-21 19:58:55,168:INFO:Creating metrics dataframe
2024-10-21 19:58:55,169:INFO:Uploading results into container
2024-10-21 19:58:55,170:INFO:Uploading model into container now
2024-10-21 19:58:55,170:INFO:_master_model_container: 3
2024-10-21 19:58:55,170:INFO:_display_container: 2
2024-10-21 19:58:55,170:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-21 19:58:55,170:INFO:create_model() successfully completed......................................
2024-10-21 19:58:55,260:INFO:SubProcess create_model() end ==================================
2024-10-21 19:58:55,260:INFO:Creating metrics dataframe
2024-10-21 19:58:55,265:INFO:Initializing Decision Tree Classifier
2024-10-21 19:58:55,265:INFO:Total runtime is 0.28622973362604776 minutes
2024-10-21 19:58:55,267:INFO:SubProcess create_model() called ==================================
2024-10-21 19:58:55,268:INFO:Initializing create_model()
2024-10-21 19:58:55,268:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268F67C990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 19:58:55,268:INFO:Checking exceptions
2024-10-21 19:58:55,268:INFO:Importing libraries
2024-10-21 19:58:55,268:INFO:Copying training dataset
2024-10-21 19:58:55,313:INFO:Defining folds
2024-10-21 19:58:55,313:INFO:Declaring metric variables
2024-10-21 19:58:55,316:INFO:Importing untrained model
2024-10-21 19:58:55,320:INFO:Decision Tree Classifier Imported successfully
2024-10-21 19:58:55,324:INFO:Starting cross validation
2024-10-21 19:58:55,325:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 19:58:57,254:INFO:Calculating mean and std
2024-10-21 19:58:57,255:INFO:Creating metrics dataframe
2024-10-21 19:58:57,256:INFO:Uploading results into container
2024-10-21 19:58:57,256:INFO:Uploading model into container now
2024-10-21 19:58:57,257:INFO:_master_model_container: 4
2024-10-21 19:58:57,257:INFO:_display_container: 2
2024-10-21 19:58:57,257:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-10-21 19:58:57,257:INFO:create_model() successfully completed......................................
2024-10-21 19:58:57,347:INFO:SubProcess create_model() end ==================================
2024-10-21 19:58:57,347:INFO:Creating metrics dataframe
2024-10-21 19:58:57,353:INFO:Initializing SVM - Linear Kernel
2024-10-21 19:58:57,353:INFO:Total runtime is 0.3210182229677836 minutes
2024-10-21 19:58:57,355:INFO:SubProcess create_model() called ==================================
2024-10-21 19:58:57,355:INFO:Initializing create_model()
2024-10-21 19:58:57,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268F67C990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 19:58:57,355:INFO:Checking exceptions
2024-10-21 19:58:57,355:INFO:Importing libraries
2024-10-21 19:58:57,355:INFO:Copying training dataset
2024-10-21 19:58:57,398:INFO:Defining folds
2024-10-21 19:58:57,398:INFO:Declaring metric variables
2024-10-21 19:58:57,400:INFO:Importing untrained model
2024-10-21 19:58:57,403:INFO:SVM - Linear Kernel Imported successfully
2024-10-21 19:58:57,407:INFO:Starting cross validation
2024-10-21 19:58:57,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 19:59:02,861:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 19:59:03,530:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 19:59:03,929:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 19:59:03,948:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 19:59:04,068:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 19:59:04,213:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 19:59:04,517:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 19:59:04,902:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 19:59:04,917:INFO:Calculating mean and std
2024-10-21 19:59:04,918:INFO:Creating metrics dataframe
2024-10-21 19:59:04,919:INFO:Uploading results into container
2024-10-21 19:59:04,920:INFO:Uploading model into container now
2024-10-21 19:59:04,920:INFO:_master_model_container: 5
2024-10-21 19:59:04,920:INFO:_display_container: 2
2024-10-21 19:59:04,920:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-21 19:59:04,920:INFO:create_model() successfully completed......................................
2024-10-21 19:59:05,010:INFO:SubProcess create_model() end ==================================
2024-10-21 19:59:05,010:INFO:Creating metrics dataframe
2024-10-21 19:59:05,017:INFO:Initializing Ridge Classifier
2024-10-21 19:59:05,017:INFO:Total runtime is 0.44876779715220133 minutes
2024-10-21 19:59:05,019:INFO:SubProcess create_model() called ==================================
2024-10-21 19:59:05,019:INFO:Initializing create_model()
2024-10-21 19:59:05,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268F67C990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 19:59:05,019:INFO:Checking exceptions
2024-10-21 19:59:05,019:INFO:Importing libraries
2024-10-21 19:59:05,021:INFO:Copying training dataset
2024-10-21 19:59:05,063:INFO:Defining folds
2024-10-21 19:59:05,063:INFO:Declaring metric variables
2024-10-21 19:59:05,066:INFO:Importing untrained model
2024-10-21 19:59:05,068:INFO:Ridge Classifier Imported successfully
2024-10-21 19:59:05,074:INFO:Starting cross validation
2024-10-21 19:59:05,075:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 19:59:06,228:INFO:Calculating mean and std
2024-10-21 19:59:06,231:INFO:Creating metrics dataframe
2024-10-21 19:59:06,233:INFO:Uploading results into container
2024-10-21 19:59:06,233:INFO:Uploading model into container now
2024-10-21 19:59:06,234:INFO:_master_model_container: 6
2024-10-21 19:59:06,234:INFO:_display_container: 2
2024-10-21 19:59:06,234:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-10-21 19:59:06,234:INFO:create_model() successfully completed......................................
2024-10-21 19:59:06,322:INFO:SubProcess create_model() end ==================================
2024-10-21 19:59:06,322:INFO:Creating metrics dataframe
2024-10-21 19:59:06,328:INFO:Initializing Random Forest Classifier
2024-10-21 19:59:06,328:INFO:Total runtime is 0.47060646216074625 minutes
2024-10-21 19:59:06,330:INFO:SubProcess create_model() called ==================================
2024-10-21 19:59:06,330:INFO:Initializing create_model()
2024-10-21 19:59:06,330:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268F67C990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 19:59:06,330:INFO:Checking exceptions
2024-10-21 19:59:06,330:INFO:Importing libraries
2024-10-21 19:59:06,330:INFO:Copying training dataset
2024-10-21 19:59:06,378:INFO:Defining folds
2024-10-21 19:59:06,378:INFO:Declaring metric variables
2024-10-21 19:59:06,381:INFO:Importing untrained model
2024-10-21 19:59:06,384:INFO:Random Forest Classifier Imported successfully
2024-10-21 19:59:06,388:INFO:Starting cross validation
2024-10-21 19:59:06,388:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 19:59:25,743:INFO:Calculating mean and std
2024-10-21 19:59:25,744:INFO:Creating metrics dataframe
2024-10-21 19:59:25,745:INFO:Uploading results into container
2024-10-21 19:59:25,746:INFO:Uploading model into container now
2024-10-21 19:59:25,746:INFO:_master_model_container: 7
2024-10-21 19:59:25,746:INFO:_display_container: 2
2024-10-21 19:59:25,747:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-21 19:59:25,747:INFO:create_model() successfully completed......................................
2024-10-21 19:59:25,843:INFO:SubProcess create_model() end ==================================
2024-10-21 19:59:25,843:INFO:Creating metrics dataframe
2024-10-21 19:59:25,852:INFO:Initializing Quadratic Discriminant Analysis
2024-10-21 19:59:25,852:INFO:Total runtime is 0.7960163593292237 minutes
2024-10-21 19:59:25,856:INFO:SubProcess create_model() called ==================================
2024-10-21 19:59:25,856:INFO:Initializing create_model()
2024-10-21 19:59:25,857:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268F67C990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 19:59:25,857:INFO:Checking exceptions
2024-10-21 19:59:25,857:INFO:Importing libraries
2024-10-21 19:59:25,857:INFO:Copying training dataset
2024-10-21 19:59:25,908:INFO:Defining folds
2024-10-21 19:59:25,908:INFO:Declaring metric variables
2024-10-21 19:59:25,910:INFO:Importing untrained model
2024-10-21 19:59:25,914:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-21 19:59:25,919:INFO:Starting cross validation
2024-10-21 19:59:25,920:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 19:59:26,860:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 19:59:26,953:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 19:59:26,986:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 19:59:27,032:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 19:59:27,086:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 19:59:27,141:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 19:59:27,172:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 19:59:27,241:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 19:59:27,241:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 19:59:27,329:INFO:Calculating mean and std
2024-10-21 19:59:27,330:INFO:Creating metrics dataframe
2024-10-21 19:59:27,331:INFO:Uploading results into container
2024-10-21 19:59:27,332:INFO:Uploading model into container now
2024-10-21 19:59:27,332:INFO:_master_model_container: 8
2024-10-21 19:59:27,332:INFO:_display_container: 2
2024-10-21 19:59:27,332:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-21 19:59:27,332:INFO:create_model() successfully completed......................................
2024-10-21 19:59:27,426:INFO:SubProcess create_model() end ==================================
2024-10-21 19:59:27,427:INFO:Creating metrics dataframe
2024-10-21 19:59:27,433:INFO:Initializing Ada Boost Classifier
2024-10-21 19:59:27,433:INFO:Total runtime is 0.822367525100708 minutes
2024-10-21 19:59:27,435:INFO:SubProcess create_model() called ==================================
2024-10-21 19:59:27,435:INFO:Initializing create_model()
2024-10-21 19:59:27,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268F67C990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 19:59:27,435:INFO:Checking exceptions
2024-10-21 19:59:27,435:INFO:Importing libraries
2024-10-21 19:59:27,436:INFO:Copying training dataset
2024-10-21 19:59:27,494:INFO:Defining folds
2024-10-21 19:59:27,494:INFO:Declaring metric variables
2024-10-21 19:59:27,497:INFO:Importing untrained model
2024-10-21 19:59:27,499:INFO:Ada Boost Classifier Imported successfully
2024-10-21 19:59:27,505:INFO:Starting cross validation
2024-10-21 19:59:27,506:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 19:59:28,163:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 19:59:28,201:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 19:59:28,202:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 19:59:28,243:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 19:59:28,286:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 19:59:28,337:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 19:59:28,374:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 19:59:28,413:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 19:59:28,444:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 19:59:28,477:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 19:59:35,042:INFO:Calculating mean and std
2024-10-21 19:59:35,043:INFO:Creating metrics dataframe
2024-10-21 19:59:35,044:INFO:Uploading results into container
2024-10-21 19:59:35,044:INFO:Uploading model into container now
2024-10-21 19:59:35,045:INFO:_master_model_container: 9
2024-10-21 19:59:35,045:INFO:_display_container: 2
2024-10-21 19:59:35,045:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-10-21 19:59:35,045:INFO:create_model() successfully completed......................................
2024-10-21 19:59:35,134:INFO:SubProcess create_model() end ==================================
2024-10-21 19:59:35,134:INFO:Creating metrics dataframe
2024-10-21 19:59:35,140:INFO:Initializing Gradient Boosting Classifier
2024-10-21 19:59:35,140:INFO:Total runtime is 0.9508031010627747 minutes
2024-10-21 19:59:35,143:INFO:SubProcess create_model() called ==================================
2024-10-21 19:59:35,143:INFO:Initializing create_model()
2024-10-21 19:59:35,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268F67C990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 19:59:35,143:INFO:Checking exceptions
2024-10-21 19:59:35,143:INFO:Importing libraries
2024-10-21 19:59:35,143:INFO:Copying training dataset
2024-10-21 19:59:35,187:INFO:Defining folds
2024-10-21 19:59:35,187:INFO:Declaring metric variables
2024-10-21 19:59:35,189:INFO:Importing untrained model
2024-10-21 19:59:35,192:INFO:Gradient Boosting Classifier Imported successfully
2024-10-21 19:59:35,196:INFO:Starting cross validation
2024-10-21 19:59:35,197:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 19:59:58,814:INFO:Calculating mean and std
2024-10-21 19:59:58,814:INFO:Creating metrics dataframe
2024-10-21 19:59:58,816:INFO:Uploading results into container
2024-10-21 19:59:58,816:INFO:Uploading model into container now
2024-10-21 19:59:58,816:INFO:_master_model_container: 10
2024-10-21 19:59:58,816:INFO:_display_container: 2
2024-10-21 19:59:58,817:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-21 19:59:58,817:INFO:create_model() successfully completed......................................
2024-10-21 19:59:58,905:INFO:SubProcess create_model() end ==================================
2024-10-21 19:59:58,905:INFO:Creating metrics dataframe
2024-10-21 19:59:58,912:INFO:Initializing Linear Discriminant Analysis
2024-10-21 19:59:58,912:INFO:Total runtime is 1.3470068057378133 minutes
2024-10-21 19:59:58,914:INFO:SubProcess create_model() called ==================================
2024-10-21 19:59:58,914:INFO:Initializing create_model()
2024-10-21 19:59:58,914:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268F67C990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 19:59:58,914:INFO:Checking exceptions
2024-10-21 19:59:58,915:INFO:Importing libraries
2024-10-21 19:59:58,915:INFO:Copying training dataset
2024-10-21 19:59:58,960:INFO:Defining folds
2024-10-21 19:59:58,960:INFO:Declaring metric variables
2024-10-21 19:59:58,963:INFO:Importing untrained model
2024-10-21 19:59:58,965:INFO:Linear Discriminant Analysis Imported successfully
2024-10-21 19:59:58,970:INFO:Starting cross validation
2024-10-21 19:59:58,970:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 20:00:00,273:INFO:Calculating mean and std
2024-10-21 20:00:00,274:INFO:Creating metrics dataframe
2024-10-21 20:00:00,276:INFO:Uploading results into container
2024-10-21 20:00:00,276:INFO:Uploading model into container now
2024-10-21 20:00:00,277:INFO:_master_model_container: 11
2024-10-21 20:00:00,277:INFO:_display_container: 2
2024-10-21 20:00:00,277:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-21 20:00:00,277:INFO:create_model() successfully completed......................................
2024-10-21 20:00:00,361:INFO:SubProcess create_model() end ==================================
2024-10-21 20:00:00,361:INFO:Creating metrics dataframe
2024-10-21 20:00:00,368:INFO:Initializing Extra Trees Classifier
2024-10-21 20:00:00,369:INFO:Total runtime is 1.3713003317515056 minutes
2024-10-21 20:00:00,371:INFO:SubProcess create_model() called ==================================
2024-10-21 20:00:00,372:INFO:Initializing create_model()
2024-10-21 20:00:00,372:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268F67C990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 20:00:00,372:INFO:Checking exceptions
2024-10-21 20:00:00,372:INFO:Importing libraries
2024-10-21 20:00:00,372:INFO:Copying training dataset
2024-10-21 20:00:00,415:INFO:Defining folds
2024-10-21 20:00:00,415:INFO:Declaring metric variables
2024-10-21 20:00:00,417:INFO:Importing untrained model
2024-10-21 20:00:00,420:INFO:Extra Trees Classifier Imported successfully
2024-10-21 20:00:00,425:INFO:Starting cross validation
2024-10-21 20:00:00,425:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 20:00:15,447:INFO:Calculating mean and std
2024-10-21 20:00:15,447:INFO:Creating metrics dataframe
2024-10-21 20:00:15,449:INFO:Uploading results into container
2024-10-21 20:00:15,449:INFO:Uploading model into container now
2024-10-21 20:00:15,450:INFO:_master_model_container: 12
2024-10-21 20:00:15,450:INFO:_display_container: 2
2024-10-21 20:00:15,450:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-10-21 20:00:15,450:INFO:create_model() successfully completed......................................
2024-10-21 20:00:15,548:INFO:SubProcess create_model() end ==================================
2024-10-21 20:00:15,548:INFO:Creating metrics dataframe
2024-10-21 20:00:15,556:INFO:Initializing Light Gradient Boosting Machine
2024-10-21 20:00:15,556:INFO:Total runtime is 1.6244124054908753 minutes
2024-10-21 20:00:15,558:INFO:SubProcess create_model() called ==================================
2024-10-21 20:00:15,560:INFO:Initializing create_model()
2024-10-21 20:00:15,560:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268F67C990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 20:00:15,560:INFO:Checking exceptions
2024-10-21 20:00:15,560:INFO:Importing libraries
2024-10-21 20:00:15,560:INFO:Copying training dataset
2024-10-21 20:00:15,606:INFO:Defining folds
2024-10-21 20:00:15,606:INFO:Declaring metric variables
2024-10-21 20:00:15,609:INFO:Importing untrained model
2024-10-21 20:00:15,611:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-21 20:00:15,616:INFO:Starting cross validation
2024-10-21 20:00:15,618:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 20:00:18,924:INFO:Calculating mean and std
2024-10-21 20:00:18,925:INFO:Creating metrics dataframe
2024-10-21 20:00:18,927:INFO:Uploading results into container
2024-10-21 20:00:18,928:INFO:Uploading model into container now
2024-10-21 20:00:18,928:INFO:_master_model_container: 13
2024-10-21 20:00:18,928:INFO:_display_container: 2
2024-10-21 20:00:18,929:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-21 20:00:18,929:INFO:create_model() successfully completed......................................
2024-10-21 20:00:19,035:INFO:SubProcess create_model() end ==================================
2024-10-21 20:00:19,036:INFO:Creating metrics dataframe
2024-10-21 20:00:19,042:INFO:Initializing Dummy Classifier
2024-10-21 20:00:19,042:INFO:Total runtime is 1.682517119248708 minutes
2024-10-21 20:00:19,045:INFO:SubProcess create_model() called ==================================
2024-10-21 20:00:19,045:INFO:Initializing create_model()
2024-10-21 20:00:19,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268F67C990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 20:00:19,046:INFO:Checking exceptions
2024-10-21 20:00:19,046:INFO:Importing libraries
2024-10-21 20:00:19,046:INFO:Copying training dataset
2024-10-21 20:00:19,099:INFO:Defining folds
2024-10-21 20:00:19,099:INFO:Declaring metric variables
2024-10-21 20:00:19,102:INFO:Importing untrained model
2024-10-21 20:00:19,104:INFO:Dummy Classifier Imported successfully
2024-10-21 20:00:19,108:INFO:Starting cross validation
2024-10-21 20:00:19,110:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 20:00:19,795:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 20:00:19,824:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 20:00:19,876:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 20:00:19,911:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 20:00:19,965:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 20:00:19,991:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 20:00:20,004:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 20:00:20,029:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 20:00:20,042:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 20:00:20,054:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 20:00:20,071:INFO:Calculating mean and std
2024-10-21 20:00:20,072:INFO:Creating metrics dataframe
2024-10-21 20:00:20,074:INFO:Uploading results into container
2024-10-21 20:00:20,074:INFO:Uploading model into container now
2024-10-21 20:00:20,075:INFO:_master_model_container: 14
2024-10-21 20:00:20,075:INFO:_display_container: 2
2024-10-21 20:00:20,075:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-10-21 20:00:20,075:INFO:create_model() successfully completed......................................
2024-10-21 20:00:20,167:INFO:SubProcess create_model() end ==================================
2024-10-21 20:00:20,167:INFO:Creating metrics dataframe
2024-10-21 20:00:20,176:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-21 20:00:20,183:INFO:Initializing create_model()
2024-10-21 20:00:20,183:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 20:00:20,183:INFO:Checking exceptions
2024-10-21 20:00:20,185:INFO:Importing libraries
2024-10-21 20:00:20,185:INFO:Copying training dataset
2024-10-21 20:00:20,238:INFO:Defining folds
2024-10-21 20:00:20,238:INFO:Declaring metric variables
2024-10-21 20:00:20,238:INFO:Importing untrained model
2024-10-21 20:00:20,238:INFO:Declaring custom model
2024-10-21 20:00:20,239:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-21 20:00:20,240:INFO:Cross validation set to False
2024-10-21 20:00:20,240:INFO:Fitting Model
2024-10-21 20:00:20,539:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-21 20:00:20,542:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001034 seconds.
2024-10-21 20:00:20,542:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-10-21 20:00:20,542:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-10-21 20:00:20,542:INFO:[LightGBM] [Info] Total Bins 1115
2024-10-21 20:00:20,543:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 13
2024-10-21 20:00:20,544:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-21 20:00:20,544:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-21 20:00:20,783:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-21 20:00:20,783:INFO:create_model() successfully completed......................................
2024-10-21 20:00:20,898:INFO:Creating Dashboard logs
2024-10-21 20:00:20,902:INFO:Model: Light Gradient Boosting Machine
2024-10-21 20:00:20,947:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-21 20:00:21,078:INFO:Initializing predict_model()
2024-10-21 20:00:21,078:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002268F6D8220>)
2024-10-21 20:00:21,078:INFO:Checking exceptions
2024-10-21 20:00:21,078:INFO:Preloading libraries
2024-10-21 20:00:24,238:INFO:Creating Dashboard logs
2024-10-21 20:00:24,240:INFO:Model: Gradient Boosting Classifier
2024-10-21 20:00:24,273:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-21 20:00:24,553:INFO:Creating Dashboard logs
2024-10-21 20:00:24,556:INFO:Model: Ada Boost Classifier
2024-10-21 20:00:24,590:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2024-10-21 20:00:24,800:INFO:Creating Dashboard logs
2024-10-21 20:00:24,803:INFO:Model: Random Forest Classifier
2024-10-21 20:00:24,836:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-21 20:00:25,062:INFO:Creating Dashboard logs
2024-10-21 20:00:25,064:INFO:Model: Extra Trees Classifier
2024-10-21 20:00:25,098:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-21 20:00:25,325:INFO:Creating Dashboard logs
2024-10-21 20:00:25,327:INFO:Model: Linear Discriminant Analysis
2024-10-21 20:00:25,360:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-10-21 20:00:25,571:INFO:Creating Dashboard logs
2024-10-21 20:00:25,573:INFO:Model: Ridge Classifier
2024-10-21 20:00:25,608:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-10-21 20:00:25,823:INFO:Creating Dashboard logs
2024-10-21 20:00:25,826:INFO:Model: Logistic Regression
2024-10-21 20:00:25,860:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-10-21 20:00:26,080:INFO:Creating Dashboard logs
2024-10-21 20:00:26,083:INFO:Model: Decision Tree Classifier
2024-10-21 20:00:26,118:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-10-21 20:00:26,332:INFO:Creating Dashboard logs
2024-10-21 20:00:26,334:INFO:Model: Naive Bayes
2024-10-21 20:00:26,368:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-10-21 20:00:26,576:INFO:Creating Dashboard logs
2024-10-21 20:00:26,577:INFO:Model: Dummy Classifier
2024-10-21 20:00:26,613:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2024-10-21 20:00:26,815:INFO:Creating Dashboard logs
2024-10-21 20:00:26,818:INFO:Model: K Neighbors Classifier
2024-10-21 20:00:26,853:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-10-21 20:00:27,071:INFO:Creating Dashboard logs
2024-10-21 20:00:27,074:INFO:Model: SVM - Linear Kernel
2024-10-21 20:00:27,108:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-21 20:00:27,335:INFO:Creating Dashboard logs
2024-10-21 20:00:27,338:INFO:Model: Quadratic Discriminant Analysis
2024-10-21 20:00:27,371:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-10-21 20:00:27,594:INFO:_master_model_container: 14
2024-10-21 20:00:27,595:INFO:_display_container: 2
2024-10-21 20:00:27,595:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-21 20:00:27,595:INFO:compare_models() successfully completed......................................
2024-10-21 20:01:47,277:INFO:Initializing create_model()
2024-10-21 20:01:47,277:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 20:01:47,277:INFO:Checking exceptions
2024-10-21 20:01:47,288:INFO:Importing libraries
2024-10-21 20:01:47,288:INFO:Copying training dataset
2024-10-21 20:01:47,332:INFO:Defining folds
2024-10-21 20:01:47,332:INFO:Declaring metric variables
2024-10-21 20:01:47,335:INFO:Importing untrained model
2024-10-21 20:01:47,338:INFO:Random Forest Classifier Imported successfully
2024-10-21 20:01:47,342:INFO:Starting cross validation
2024-10-21 20:01:47,343:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 20:02:05,348:INFO:Calculating mean and std
2024-10-21 20:02:05,350:INFO:Creating metrics dataframe
2024-10-21 20:02:05,354:INFO:Finalizing model
2024-10-21 20:02:07,819:INFO:Creating Dashboard logs
2024-10-21 20:02:07,821:INFO:Model: Random Forest Classifier
2024-10-21 20:02:07,853:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-21 20:02:07,957:INFO:Initializing predict_model()
2024-10-21 20:02:07,957:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002268DE32340>)
2024-10-21 20:02:07,957:INFO:Checking exceptions
2024-10-21 20:02:07,957:INFO:Preloading libraries
2024-10-21 20:02:09,118:INFO:Uploading results into container
2024-10-21 20:02:09,118:INFO:Uploading model into container now
2024-10-21 20:02:09,126:INFO:_master_model_container: 15
2024-10-21 20:02:09,126:INFO:_display_container: 3
2024-10-21 20:02:09,127:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-21 20:02:09,127:INFO:create_model() successfully completed......................................
2024-10-21 20:02:47,024:INFO:Initializing tune_model()
2024-10-21 20:02:47,024:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'n_estimators': [100], 'max_depth': [10, 20], 'min_samples_split': [2]}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-10-21 20:02:47,024:INFO:Checking exceptions
2024-10-21 20:02:47,056:INFO:Copying training dataset
2024-10-21 20:02:47,089:INFO:Checking base model
2024-10-21 20:02:47,090:INFO:Base model : Random Forest Classifier
2024-10-21 20:02:47,092:INFO:Declaring metric variables
2024-10-21 20:02:47,095:INFO:Defining Hyperparameters
2024-10-21 20:02:47,188:INFO:custom_grid: {'actual_estimator__n_estimators': [100], 'actual_estimator__max_depth': [10, 20], 'actual_estimator__min_samples_split': [2]}
2024-10-21 20:02:47,188:INFO:Tuning with n_jobs=-1
2024-10-21 20:02:47,188:INFO:Initializing GridSearchCV
2024-10-21 20:03:19,137:INFO:best_params: {'actual_estimator__max_depth': 10, 'actual_estimator__min_samples_split': 2, 'actual_estimator__n_estimators': 100}
2024-10-21 20:03:19,138:INFO:Hyperparameter search completed
2024-10-21 20:03:19,138:INFO:SubProcess create_model() called ==================================
2024-10-21 20:03:19,138:INFO:Initializing create_model()
2024-10-21 20:03:19,138:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002268FD093D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'max_depth': 10, 'min_samples_split': 2, 'n_estimators': 100})
2024-10-21 20:03:19,138:INFO:Checking exceptions
2024-10-21 20:03:19,138:INFO:Importing libraries
2024-10-21 20:03:19,139:INFO:Copying training dataset
2024-10-21 20:03:19,178:INFO:Defining folds
2024-10-21 20:03:19,178:INFO:Declaring metric variables
2024-10-21 20:03:19,180:INFO:Importing untrained model
2024-10-21 20:03:19,182:INFO:Declaring custom model
2024-10-21 20:03:19,185:INFO:Random Forest Classifier Imported successfully
2024-10-21 20:03:19,189:INFO:Starting cross validation
2024-10-21 20:03:19,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 20:03:32,899:INFO:Calculating mean and std
2024-10-21 20:03:32,900:INFO:Creating metrics dataframe
2024-10-21 20:03:32,903:INFO:Finalizing model
2024-10-21 20:03:34,776:INFO:Uploading results into container
2024-10-21 20:03:34,777:INFO:Uploading model into container now
2024-10-21 20:03:34,778:INFO:_master_model_container: 16
2024-10-21 20:03:34,778:INFO:_display_container: 4
2024-10-21 20:03:34,778:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-21 20:03:34,778:INFO:create_model() successfully completed......................................
2024-10-21 20:03:34,878:INFO:SubProcess create_model() end ==================================
2024-10-21 20:03:34,878:INFO:choose_better activated
2024-10-21 20:03:34,881:INFO:SubProcess create_model() called ==================================
2024-10-21 20:03:34,881:INFO:Initializing create_model()
2024-10-21 20:03:34,881:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 20:03:34,881:INFO:Checking exceptions
2024-10-21 20:03:34,883:INFO:Importing libraries
2024-10-21 20:03:34,883:INFO:Copying training dataset
2024-10-21 20:03:34,924:INFO:Defining folds
2024-10-21 20:03:34,924:INFO:Declaring metric variables
2024-10-21 20:03:34,924:INFO:Importing untrained model
2024-10-21 20:03:34,924:INFO:Declaring custom model
2024-10-21 20:03:34,925:INFO:Random Forest Classifier Imported successfully
2024-10-21 20:03:34,925:INFO:Starting cross validation
2024-10-21 20:03:34,926:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 20:03:54,451:INFO:Calculating mean and std
2024-10-21 20:03:54,451:INFO:Creating metrics dataframe
2024-10-21 20:03:54,453:INFO:Finalizing model
2024-10-21 20:03:57,015:INFO:Uploading results into container
2024-10-21 20:03:57,015:INFO:Uploading model into container now
2024-10-21 20:03:57,016:INFO:_master_model_container: 17
2024-10-21 20:03:57,016:INFO:_display_container: 5
2024-10-21 20:03:57,017:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-21 20:03:57,017:INFO:create_model() successfully completed......................................
2024-10-21 20:03:57,132:INFO:SubProcess create_model() end ==================================
2024-10-21 20:03:57,133:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8611
2024-10-21 20:03:57,133:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8639
2024-10-21 20:03:57,134:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-10-21 20:03:57,134:INFO:choose_better completed
2024-10-21 20:03:57,134:INFO:Creating Dashboard logs
2024-10-21 20:03:57,137:INFO:Model: Random Forest Classifier
2024-10-21 20:03:57,173:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 10, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-21 20:03:57,303:INFO:Initializing predict_model()
2024-10-21 20:03:57,303:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226E70CD0D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002268FCC6C00>)
2024-10-21 20:03:57,304:INFO:Checking exceptions
2024-10-21 20:03:57,304:INFO:Preloading libraries
2024-10-21 20:03:58,125:INFO:_master_model_container: 17
2024-10-21 20:03:58,125:INFO:_display_container: 4
2024-10-21 20:03:58,126:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-21 20:03:58,126:INFO:tune_model() successfully completed......................................
2024-10-21 20:05:19,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 20:05:19,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 20:05:19,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 20:05:19,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 20:05:20,268:INFO:PyCaret ClassificationExperiment
2024-10-21 20:05:20,268:INFO:Logging name: CrediCorp
2024-10-21 20:05:20,268:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-21 20:05:20,268:INFO:version 3.3.2
2024-10-21 20:05:20,268:INFO:Initializing setup()
2024-10-21 20:05:20,268:INFO:self.USI: 3f6a
2024-10-21 20:05:20,268:INFO:self._variable_keys: {'is_multiclass', 'X_train', 'y', 'n_jobs_param', 'exp_name_log', 'logging_param', 'idx', 'X', 'log_plots_param', 'memory', 'y_test', 'gpu_n_jobs_param', 'USI', 'gpu_param', 'fold_generator', 'html_param', '_available_plots', 'exp_id', 'fix_imbalance', 'fold_groups_param', 'X_test', 'seed', 'data', 'y_train', 'fold_shuffle_param', 'target_param', '_ml_usecase', 'pipeline'}
2024-10-21 20:05:20,268:INFO:Checking environment
2024-10-21 20:05:20,268:INFO:python_version: 3.11.7
2024-10-21 20:05:20,268:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-10-21 20:05:20,268:INFO:machine: AMD64
2024-10-21 20:05:20,268:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-21 20:05:20,272:INFO:Memory: svmem(total=34205937664, available=21108477952, percent=38.3, used=13097459712, free=21108477952)
2024-10-21 20:05:20,272:INFO:Physical Core: 8
2024-10-21 20:05:20,272:INFO:Logical Core: 16
2024-10-21 20:05:20,272:INFO:Checking libraries
2024-10-21 20:05:20,272:INFO:System:
2024-10-21 20:05:20,274:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-10-21 20:05:20,274:INFO:executable: d:\EntregableMLA\TrabajoFinal\Scripts\python.exe
2024-10-21 20:05:20,274:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-21 20:05:20,274:INFO:PyCaret required dependencies:
2024-10-21 20:05:20,292:INFO:                 pip: 23.2.1
2024-10-21 20:05:20,292:INFO:          setuptools: 65.5.0
2024-10-21 20:05:20,292:INFO:             pycaret: 3.3.2
2024-10-21 20:05:20,292:INFO:             IPython: 8.28.0
2024-10-21 20:05:20,292:INFO:          ipywidgets: 8.1.5
2024-10-21 20:05:20,292:INFO:                tqdm: 4.66.5
2024-10-21 20:05:20,292:INFO:               numpy: 1.26.4
2024-10-21 20:05:20,292:INFO:              pandas: 2.1.4
2024-10-21 20:05:20,292:INFO:              jinja2: 3.1.4
2024-10-21 20:05:20,292:INFO:               scipy: 1.11.4
2024-10-21 20:05:20,292:INFO:              joblib: 1.3.2
2024-10-21 20:05:20,292:INFO:             sklearn: 1.4.2
2024-10-21 20:05:20,292:INFO:                pyod: 2.0.2
2024-10-21 20:05:20,292:INFO:            imblearn: 0.12.4
2024-10-21 20:05:20,292:INFO:   category_encoders: 2.6.4
2024-10-21 20:05:20,292:INFO:            lightgbm: 4.5.0
2024-10-21 20:05:20,292:INFO:               numba: 0.60.0
2024-10-21 20:05:20,292:INFO:            requests: 2.32.3
2024-10-21 20:05:20,292:INFO:          matplotlib: 3.7.5
2024-10-21 20:05:20,292:INFO:          scikitplot: 0.3.7
2024-10-21 20:05:20,292:INFO:         yellowbrick: 1.5
2024-10-21 20:05:20,292:INFO:              plotly: 5.24.1
2024-10-21 20:05:20,292:INFO:    plotly-resampler: Not installed
2024-10-21 20:05:20,292:INFO:             kaleido: 0.2.1
2024-10-21 20:05:20,293:INFO:           schemdraw: 0.15
2024-10-21 20:05:20,293:INFO:         statsmodels: 0.14.4
2024-10-21 20:05:20,293:INFO:              sktime: 0.26.0
2024-10-21 20:05:20,293:INFO:               tbats: 1.1.3
2024-10-21 20:05:20,293:INFO:            pmdarima: 2.0.4
2024-10-21 20:05:20,293:INFO:              psutil: 6.1.0
2024-10-21 20:05:20,293:INFO:          markupsafe: 3.0.2
2024-10-21 20:05:20,293:INFO:             pickle5: Not installed
2024-10-21 20:05:20,293:INFO:         cloudpickle: 3.1.0
2024-10-21 20:05:20,293:INFO:         deprecation: 2.1.0
2024-10-21 20:05:20,293:INFO:              xxhash: 3.5.0
2024-10-21 20:05:20,293:INFO:           wurlitzer: Not installed
2024-10-21 20:05:20,293:INFO:PyCaret optional dependencies:
2024-10-21 20:05:20,549:INFO:                shap: Not installed
2024-10-21 20:05:20,550:INFO:           interpret: Not installed
2024-10-21 20:05:20,550:INFO:                umap: Not installed
2024-10-21 20:05:20,550:INFO:     ydata_profiling: Not installed
2024-10-21 20:05:20,550:INFO:  explainerdashboard: Not installed
2024-10-21 20:05:20,550:INFO:             autoviz: Not installed
2024-10-21 20:05:20,550:INFO:           fairlearn: Not installed
2024-10-21 20:05:20,550:INFO:          deepchecks: Not installed
2024-10-21 20:05:20,550:INFO:             xgboost: Not installed
2024-10-21 20:05:20,550:INFO:            catboost: Not installed
2024-10-21 20:05:20,550:INFO:              kmodes: Not installed
2024-10-21 20:05:20,550:INFO:             mlxtend: Not installed
2024-10-21 20:05:20,550:INFO:       statsforecast: Not installed
2024-10-21 20:05:20,550:INFO:        tune_sklearn: Not installed
2024-10-21 20:05:20,550:INFO:                 ray: Not installed
2024-10-21 20:05:20,550:INFO:            hyperopt: 0.2.7
2024-10-21 20:05:20,550:INFO:              optuna: 4.0.0
2024-10-21 20:05:20,550:INFO:               skopt: 0.10.2
2024-10-21 20:05:20,550:INFO:              mlflow: 2.17.0
2024-10-21 20:05:20,550:INFO:              gradio: Not installed
2024-10-21 20:05:20,550:INFO:             fastapi: 0.115.2
2024-10-21 20:05:20,550:INFO:             uvicorn: 0.32.0
2024-10-21 20:05:20,550:INFO:              m2cgen: Not installed
2024-10-21 20:05:20,550:INFO:           evidently: Not installed
2024-10-21 20:05:20,550:INFO:               fugue: Not installed
2024-10-21 20:05:20,550:INFO:           streamlit: Not installed
2024-10-21 20:05:20,550:INFO:             prophet: Not installed
2024-10-21 20:05:20,550:INFO:None
2024-10-21 20:05:20,551:INFO:Set up data.
2024-10-21 20:05:20,611:INFO:Set up folding strategy.
2024-10-21 20:05:20,613:INFO:Set up train/test split.
2024-10-21 20:05:20,673:INFO:Set up index.
2024-10-21 20:05:20,678:INFO:Assigning column types.
2024-10-21 20:05:20,703:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-21 20:05:20,740:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 20:05:20,742:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 20:05:20,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:20,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:20,892:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 20:05:20,893:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 20:05:20,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:20,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:20,916:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-21 20:05:20,953:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 20:05:20,975:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:20,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:21,011:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 20:05:21,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:21,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:21,035:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-21 20:05:21,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:21,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:21,154:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:21,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:21,156:INFO:Preparing preprocessing pipeline...
2024-10-21 20:05:21,161:INFO:Set up simple imputation.
2024-10-21 20:05:21,178:INFO:Set up encoding of ordinal features.
2024-10-21 20:05:21,187:INFO:Set up encoding of categorical features.
2024-10-21 20:05:21,444:INFO:Finished creating preprocessing pipeline.
2024-10-21 20:05:21,457:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-21 20:05:21,457:INFO:Creating final display dataframe.
2024-10-21 20:05:21,777:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target           Exited
2                   Target type           Binary
3           Original data shape     (165034, 14)
4        Transformed data shape     (165034, 14)
5   Transformed train set shape     (115523, 14)
6    Transformed test set shape      (49511, 14)
7               Ignore features                2
8              Numeric features                8
9          Categorical features                2
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16               Fold Generator  StratifiedKFold
17                  Fold Number               10
18                     CPU Jobs               -1
19                      Use GPU            False
20               Log Experiment     MlflowLogger
21              Experiment Name        CrediCorp
22                          USI             3f6a
2024-10-21 20:05:21,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:21,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:21,907:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:21,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 20:05:21,909:INFO:Logging experiment in loggers
2024-10-21 20:05:22,025:INFO:SubProcess save_model() called ==================================
2024-10-21 20:05:22,048:INFO:Initializing save_model()
2024-10-21 20:05:22,048:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\admin\AppData\Local\Temp\tmp5p2feznm\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-21 20:05:22,049:INFO:Adding model into prep_pipe
2024-10-21 20:05:22,049:WARNING:Only Model saved as it was a pipeline.
2024-10-21 20:05:22,052:INFO:C:\Users\admin\AppData\Local\Temp\tmp5p2feznm\Transformation Pipeline.pkl saved in current working directory
2024-10-21 20:05:22,064:INFO:Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-21 20:05:22,064:INFO:save_model() successfully completed......................................
2024-10-21 20:05:22,149:INFO:SubProcess save_model() end ==================================
2024-10-21 20:05:22,180:INFO:setup() successfully completed in 1.64s...............
2024-10-22 09:15:52,640:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-22 09:15:52,667:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-22 09:15:52,667:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-22 09:15:52,667:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-22 09:16:04,966:INFO:PyCaret ClassificationExperiment
2024-10-22 09:16:04,966:INFO:Logging name: CrediCorp
2024-10-22 09:16:04,966:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-22 09:16:04,967:INFO:version 3.3.2
2024-10-22 09:16:04,967:INFO:Initializing setup()
2024-10-22 09:16:04,967:INFO:self.USI: 1aa6
2024-10-22 09:16:04,967:INFO:self._variable_keys: {'pipeline', 'y', 'y_test', 'exp_name_log', 'is_multiclass', 'html_param', 'gpu_param', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'memory', 'fold_shuffle_param', 'logging_param', '_ml_usecase', '_available_plots', 'data', 'gpu_n_jobs_param', 'y_train', 'fold_generator', 'seed', 'idx', 'exp_id', 'fold_groups_param', 'X_train', 'USI', 'X', 'X_test', 'target_param'}
2024-10-22 09:16:04,968:INFO:Checking environment
2024-10-22 09:16:04,968:INFO:python_version: 3.11.7
2024-10-22 09:16:04,968:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-10-22 09:16:04,968:INFO:machine: AMD64
2024-10-22 09:16:04,969:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-22 09:16:04,979:INFO:Memory: svmem(total=34205937664, available=22799126528, percent=33.3, used=11406811136, free=22799126528)
2024-10-22 09:16:04,980:INFO:Physical Core: 8
2024-10-22 09:16:04,980:INFO:Logical Core: 16
2024-10-22 09:16:04,981:INFO:Checking libraries
2024-10-22 09:16:04,981:INFO:System:
2024-10-22 09:16:04,981:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-10-22 09:16:04,982:INFO:executable: d:\EntregableMLA\TrabajoFinal\Scripts\python.exe
2024-10-22 09:16:04,982:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-22 09:16:04,982:INFO:PyCaret required dependencies:
2024-10-22 09:16:05,131:INFO:                 pip: 23.2.1
2024-10-22 09:16:05,131:INFO:          setuptools: 65.5.0
2024-10-22 09:16:05,131:INFO:             pycaret: 3.3.2
2024-10-22 09:16:05,131:INFO:             IPython: 8.28.0
2024-10-22 09:16:05,131:INFO:          ipywidgets: 8.1.5
2024-10-22 09:16:05,131:INFO:                tqdm: 4.66.5
2024-10-22 09:16:05,131:INFO:               numpy: 1.26.4
2024-10-22 09:16:05,131:INFO:              pandas: 2.1.4
2024-10-22 09:16:05,131:INFO:              jinja2: 3.1.4
2024-10-22 09:16:05,131:INFO:               scipy: 1.11.4
2024-10-22 09:16:05,131:INFO:              joblib: 1.3.2
2024-10-22 09:16:05,131:INFO:             sklearn: 1.4.2
2024-10-22 09:16:05,131:INFO:                pyod: 2.0.2
2024-10-22 09:16:05,132:INFO:            imblearn: 0.12.4
2024-10-22 09:16:05,132:INFO:   category_encoders: 2.6.4
2024-10-22 09:16:05,132:INFO:            lightgbm: 4.5.0
2024-10-22 09:16:05,132:INFO:               numba: 0.60.0
2024-10-22 09:16:05,132:INFO:            requests: 2.32.3
2024-10-22 09:16:05,132:INFO:          matplotlib: 3.7.5
2024-10-22 09:16:05,132:INFO:          scikitplot: 0.3.7
2024-10-22 09:16:05,132:INFO:         yellowbrick: 1.5
2024-10-22 09:16:05,132:INFO:              plotly: 5.24.1
2024-10-22 09:16:05,132:INFO:    plotly-resampler: Not installed
2024-10-22 09:16:05,132:INFO:             kaleido: 0.2.1
2024-10-22 09:16:05,132:INFO:           schemdraw: 0.15
2024-10-22 09:16:05,132:INFO:         statsmodels: 0.14.4
2024-10-22 09:16:05,132:INFO:              sktime: 0.26.0
2024-10-22 09:16:05,132:INFO:               tbats: 1.1.3
2024-10-22 09:16:05,132:INFO:            pmdarima: 2.0.4
2024-10-22 09:16:05,132:INFO:              psutil: 6.1.0
2024-10-22 09:16:05,132:INFO:          markupsafe: 3.0.2
2024-10-22 09:16:05,132:INFO:             pickle5: Not installed
2024-10-22 09:16:05,132:INFO:         cloudpickle: 3.1.0
2024-10-22 09:16:05,132:INFO:         deprecation: 2.1.0
2024-10-22 09:16:05,132:INFO:              xxhash: 3.5.0
2024-10-22 09:16:05,132:INFO:           wurlitzer: Not installed
2024-10-22 09:16:05,132:INFO:PyCaret optional dependencies:
2024-10-22 09:16:05,547:INFO:                shap: Not installed
2024-10-22 09:16:05,547:INFO:           interpret: Not installed
2024-10-22 09:16:05,547:INFO:                umap: Not installed
2024-10-22 09:16:05,547:INFO:     ydata_profiling: Not installed
2024-10-22 09:16:05,547:INFO:  explainerdashboard: Not installed
2024-10-22 09:16:05,547:INFO:             autoviz: Not installed
2024-10-22 09:16:05,547:INFO:           fairlearn: Not installed
2024-10-22 09:16:05,547:INFO:          deepchecks: Not installed
2024-10-22 09:16:05,547:INFO:             xgboost: Not installed
2024-10-22 09:16:05,547:INFO:            catboost: Not installed
2024-10-22 09:16:05,547:INFO:              kmodes: Not installed
2024-10-22 09:16:05,547:INFO:             mlxtend: Not installed
2024-10-22 09:16:05,547:INFO:       statsforecast: Not installed
2024-10-22 09:16:05,547:INFO:        tune_sklearn: Not installed
2024-10-22 09:16:05,547:INFO:                 ray: Not installed
2024-10-22 09:16:05,547:INFO:            hyperopt: 0.2.7
2024-10-22 09:16:05,547:INFO:              optuna: 4.0.0
2024-10-22 09:16:05,547:INFO:               skopt: 0.10.2
2024-10-22 09:16:05,547:INFO:              mlflow: 2.17.0
2024-10-22 09:16:05,548:INFO:              gradio: Not installed
2024-10-22 09:16:05,548:INFO:             fastapi: 0.115.2
2024-10-22 09:16:05,548:INFO:             uvicorn: 0.32.0
2024-10-22 09:16:05,548:INFO:              m2cgen: Not installed
2024-10-22 09:16:05,548:INFO:           evidently: Not installed
2024-10-22 09:16:05,548:INFO:               fugue: Not installed
2024-10-22 09:16:05,548:INFO:           streamlit: Not installed
2024-10-22 09:16:05,548:INFO:             prophet: Not installed
2024-10-22 09:16:05,548:INFO:None
2024-10-22 09:16:05,548:INFO:Set up data.
2024-10-22 09:16:05,662:INFO:Set up folding strategy.
2024-10-22 09:16:05,662:INFO:Set up train/test split.
2024-10-22 09:16:05,750:INFO:Set up index.
2024-10-22 09:16:05,771:INFO:Assigning column types.
2024-10-22 09:16:05,798:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-22 09:16:05,833:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-22 09:16:05,843:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 09:16:06,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:06,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:06,049:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-22 09:16:06,050:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 09:16:06,072:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:06,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:06,072:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-22 09:16:06,107:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 09:16:06,130:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:06,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:06,167:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 09:16:06,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:06,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:06,189:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-22 09:16:06,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:06,250:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:06,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:06,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:06,325:INFO:Preparing preprocessing pipeline...
2024-10-22 09:16:06,332:INFO:Set up simple imputation.
2024-10-22 09:16:06,350:INFO:Set up encoding of ordinal features.
2024-10-22 09:16:06,360:INFO:Set up encoding of categorical features.
2024-10-22 09:16:06,642:INFO:Finished creating preprocessing pipeline.
2024-10-22 09:16:06,665:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-22 09:16:06,665:INFO:Creating final display dataframe.
2024-10-22 09:16:07,034:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target           Exited
2                   Target type           Binary
3           Original data shape     (165034, 14)
4        Transformed data shape     (165034, 14)
5   Transformed train set shape     (115523, 14)
6    Transformed test set shape      (49511, 14)
7               Ignore features                2
8              Numeric features                8
9          Categorical features                2
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16               Fold Generator  StratifiedKFold
17                  Fold Number               10
18                     CPU Jobs               -1
19                      Use GPU            False
20               Log Experiment     MlflowLogger
21              Experiment Name        CrediCorp
22                          USI             1aa6
2024-10-22 09:16:07,107:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:07,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:07,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:07,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:07,165:INFO:Logging experiment in loggers
2024-10-22 09:16:07,403:INFO:SubProcess save_model() called ==================================
2024-10-22 09:16:07,426:INFO:Initializing save_model()
2024-10-22 09:16:07,427:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\admin\AppData\Local\Temp\tmpprx6v3te\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-22 09:16:07,427:INFO:Adding model into prep_pipe
2024-10-22 09:16:07,427:WARNING:Only Model saved as it was a pipeline.
2024-10-22 09:16:07,430:INFO:C:\Users\admin\AppData\Local\Temp\tmpprx6v3te\Transformation Pipeline.pkl saved in current working directory
2024-10-22 09:16:07,442:INFO:Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-22 09:16:07,442:INFO:save_model() successfully completed......................................
2024-10-22 09:16:07,518:INFO:SubProcess save_model() end ==================================
2024-10-22 09:16:07,567:INFO:setup() successfully completed in 10.38s...............
2024-10-22 09:16:40,105:INFO:PyCaret ClassificationExperiment
2024-10-22 09:16:40,105:INFO:Logging name: CrediCorp
2024-10-22 09:16:40,105:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-22 09:16:40,105:INFO:version 3.3.2
2024-10-22 09:16:40,105:INFO:Initializing setup()
2024-10-22 09:16:40,105:INFO:self.USI: 4dcc
2024-10-22 09:16:40,105:INFO:self._variable_keys: {'pipeline', 'y', 'y_test', 'exp_name_log', 'is_multiclass', 'html_param', 'gpu_param', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'memory', 'fold_shuffle_param', 'logging_param', '_ml_usecase', '_available_plots', 'data', 'gpu_n_jobs_param', 'y_train', 'fold_generator', 'seed', 'idx', 'exp_id', 'fold_groups_param', 'X_train', 'USI', 'X', 'X_test', 'target_param'}
2024-10-22 09:16:40,105:INFO:Checking environment
2024-10-22 09:16:40,105:INFO:python_version: 3.11.7
2024-10-22 09:16:40,105:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-10-22 09:16:40,105:INFO:machine: AMD64
2024-10-22 09:16:40,105:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-22 09:16:40,108:INFO:Memory: svmem(total=34205937664, available=23029932032, percent=32.7, used=11176005632, free=23029932032)
2024-10-22 09:16:40,108:INFO:Physical Core: 8
2024-10-22 09:16:40,108:INFO:Logical Core: 16
2024-10-22 09:16:40,109:INFO:Checking libraries
2024-10-22 09:16:40,109:INFO:System:
2024-10-22 09:16:40,109:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-10-22 09:16:40,109:INFO:executable: d:\EntregableMLA\TrabajoFinal\Scripts\python.exe
2024-10-22 09:16:40,109:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-22 09:16:40,109:INFO:PyCaret required dependencies:
2024-10-22 09:16:40,109:INFO:                 pip: 23.2.1
2024-10-22 09:16:40,109:INFO:          setuptools: 65.5.0
2024-10-22 09:16:40,109:INFO:             pycaret: 3.3.2
2024-10-22 09:16:40,109:INFO:             IPython: 8.28.0
2024-10-22 09:16:40,109:INFO:          ipywidgets: 8.1.5
2024-10-22 09:16:40,109:INFO:                tqdm: 4.66.5
2024-10-22 09:16:40,109:INFO:               numpy: 1.26.4
2024-10-22 09:16:40,109:INFO:              pandas: 2.1.4
2024-10-22 09:16:40,109:INFO:              jinja2: 3.1.4
2024-10-22 09:16:40,109:INFO:               scipy: 1.11.4
2024-10-22 09:16:40,109:INFO:              joblib: 1.3.2
2024-10-22 09:16:40,109:INFO:             sklearn: 1.4.2
2024-10-22 09:16:40,109:INFO:                pyod: 2.0.2
2024-10-22 09:16:40,109:INFO:            imblearn: 0.12.4
2024-10-22 09:16:40,109:INFO:   category_encoders: 2.6.4
2024-10-22 09:16:40,109:INFO:            lightgbm: 4.5.0
2024-10-22 09:16:40,109:INFO:               numba: 0.60.0
2024-10-22 09:16:40,109:INFO:            requests: 2.32.3
2024-10-22 09:16:40,109:INFO:          matplotlib: 3.7.5
2024-10-22 09:16:40,109:INFO:          scikitplot: 0.3.7
2024-10-22 09:16:40,110:INFO:         yellowbrick: 1.5
2024-10-22 09:16:40,110:INFO:              plotly: 5.24.1
2024-10-22 09:16:40,110:INFO:    plotly-resampler: Not installed
2024-10-22 09:16:40,110:INFO:             kaleido: 0.2.1
2024-10-22 09:16:40,110:INFO:           schemdraw: 0.15
2024-10-22 09:16:40,110:INFO:         statsmodels: 0.14.4
2024-10-22 09:16:40,110:INFO:              sktime: 0.26.0
2024-10-22 09:16:40,110:INFO:               tbats: 1.1.3
2024-10-22 09:16:40,110:INFO:            pmdarima: 2.0.4
2024-10-22 09:16:40,110:INFO:              psutil: 6.1.0
2024-10-22 09:16:40,110:INFO:          markupsafe: 3.0.2
2024-10-22 09:16:40,110:INFO:             pickle5: Not installed
2024-10-22 09:16:40,110:INFO:         cloudpickle: 3.1.0
2024-10-22 09:16:40,110:INFO:         deprecation: 2.1.0
2024-10-22 09:16:40,110:INFO:              xxhash: 3.5.0
2024-10-22 09:16:40,110:INFO:           wurlitzer: Not installed
2024-10-22 09:16:40,110:INFO:PyCaret optional dependencies:
2024-10-22 09:16:40,110:INFO:                shap: Not installed
2024-10-22 09:16:40,110:INFO:           interpret: Not installed
2024-10-22 09:16:40,110:INFO:                umap: Not installed
2024-10-22 09:16:40,110:INFO:     ydata_profiling: Not installed
2024-10-22 09:16:40,110:INFO:  explainerdashboard: Not installed
2024-10-22 09:16:40,110:INFO:             autoviz: Not installed
2024-10-22 09:16:40,110:INFO:           fairlearn: Not installed
2024-10-22 09:16:40,110:INFO:          deepchecks: Not installed
2024-10-22 09:16:40,111:INFO:             xgboost: Not installed
2024-10-22 09:16:40,111:INFO:            catboost: Not installed
2024-10-22 09:16:40,111:INFO:              kmodes: Not installed
2024-10-22 09:16:40,111:INFO:             mlxtend: Not installed
2024-10-22 09:16:40,111:INFO:       statsforecast: Not installed
2024-10-22 09:16:40,111:INFO:        tune_sklearn: Not installed
2024-10-22 09:16:40,111:INFO:                 ray: Not installed
2024-10-22 09:16:40,111:INFO:            hyperopt: 0.2.7
2024-10-22 09:16:40,111:INFO:              optuna: 4.0.0
2024-10-22 09:16:40,111:INFO:               skopt: 0.10.2
2024-10-22 09:16:40,111:INFO:              mlflow: 2.17.0
2024-10-22 09:16:40,111:INFO:              gradio: Not installed
2024-10-22 09:16:40,111:INFO:             fastapi: 0.115.2
2024-10-22 09:16:40,111:INFO:             uvicorn: 0.32.0
2024-10-22 09:16:40,111:INFO:              m2cgen: Not installed
2024-10-22 09:16:40,111:INFO:           evidently: Not installed
2024-10-22 09:16:40,111:INFO:               fugue: Not installed
2024-10-22 09:16:40,111:INFO:           streamlit: Not installed
2024-10-22 09:16:40,111:INFO:             prophet: Not installed
2024-10-22 09:16:40,111:INFO:None
2024-10-22 09:16:40,111:INFO:Set up data.
2024-10-22 09:16:40,172:INFO:Set up folding strategy.
2024-10-22 09:16:40,172:INFO:Set up train/test split.
2024-10-22 09:16:40,232:INFO:Set up index.
2024-10-22 09:16:40,235:INFO:Assigning column types.
2024-10-22 09:16:40,261:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-22 09:16:40,297:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-22 09:16:40,297:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 09:16:40,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:40,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:40,354:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-22 09:16:40,355:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 09:16:40,376:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:40,376:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:40,376:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-22 09:16:40,411:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 09:16:40,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:40,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:40,468:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 09:16:40,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:40,490:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:40,490:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-22 09:16:40,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:40,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:40,604:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:40,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:40,605:INFO:Preparing preprocessing pipeline...
2024-10-22 09:16:40,610:INFO:Set up simple imputation.
2024-10-22 09:16:40,629:INFO:Set up encoding of ordinal features.
2024-10-22 09:16:40,638:INFO:Set up encoding of categorical features.
2024-10-22 09:16:40,890:INFO:Finished creating preprocessing pipeline.
2024-10-22 09:16:40,902:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-22 09:16:40,902:INFO:Creating final display dataframe.
2024-10-22 09:16:41,230:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target           Exited
2                   Target type           Binary
3           Original data shape     (165034, 14)
4        Transformed data shape     (165034, 14)
5   Transformed train set shape     (115523, 14)
6    Transformed test set shape      (49511, 14)
7               Ignore features                2
8              Numeric features                8
9          Categorical features                2
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16               Fold Generator  StratifiedKFold
17                  Fold Number               10
18                     CPU Jobs               -1
19                      Use GPU            False
20               Log Experiment     MlflowLogger
21              Experiment Name        CrediCorp
22                          USI             4dcc
2024-10-22 09:16:41,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:41,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:41,358:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:41,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 09:16:41,359:INFO:Logging experiment in loggers
2024-10-22 09:16:41,414:INFO:SubProcess save_model() called ==================================
2024-10-22 09:16:41,437:INFO:Initializing save_model()
2024-10-22 09:16:41,437:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\admin\AppData\Local\Temp\tmp0s46rnfp\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-22 09:16:41,438:INFO:Adding model into prep_pipe
2024-10-22 09:16:41,438:WARNING:Only Model saved as it was a pipeline.
2024-10-22 09:16:42,197:INFO:C:\Users\admin\AppData\Local\Temp\tmp0s46rnfp\Transformation Pipeline.pkl saved in current working directory
2024-10-22 09:16:42,209:INFO:Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-22 09:16:42,209:INFO:save_model() successfully completed......................................
2024-10-22 09:16:42,293:INFO:SubProcess save_model() end ==================================
2024-10-22 09:16:42,315:INFO:setup() successfully completed in 1.26s...............
2024-10-22 09:16:55,895:INFO:Initializing compare_models()
2024-10-22 09:16:55,895:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-22 09:16:55,895:INFO:Checking exceptions
2024-10-22 09:16:55,923:INFO:Preparing display monitor
2024-10-22 09:16:55,941:INFO:Initializing Logistic Regression
2024-10-22 09:16:55,941:INFO:Total runtime is 0.0 minutes
2024-10-22 09:16:55,943:INFO:SubProcess create_model() called ==================================
2024-10-22 09:16:55,944:INFO:Initializing create_model()
2024-10-22 09:16:55,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F72639B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:16:55,944:INFO:Checking exceptions
2024-10-22 09:16:55,944:INFO:Importing libraries
2024-10-22 09:16:55,944:INFO:Copying training dataset
2024-10-22 09:16:55,987:INFO:Defining folds
2024-10-22 09:16:55,987:INFO:Declaring metric variables
2024-10-22 09:16:55,990:INFO:Importing untrained model
2024-10-22 09:16:55,993:INFO:Logistic Regression Imported successfully
2024-10-22 09:16:55,998:INFO:Starting cross validation
2024-10-22 09:16:55,999:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:17:05,795:INFO:Calculating mean and std
2024-10-22 09:17:05,796:INFO:Creating metrics dataframe
2024-10-22 09:17:05,798:INFO:Uploading results into container
2024-10-22 09:17:05,798:INFO:Uploading model into container now
2024-10-22 09:17:05,799:INFO:_master_model_container: 1
2024-10-22 09:17:05,799:INFO:_display_container: 2
2024-10-22 09:17:05,799:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-22 09:17:05,799:INFO:create_model() successfully completed......................................
2024-10-22 09:17:05,892:INFO:SubProcess create_model() end ==================================
2024-10-22 09:17:05,892:INFO:Creating metrics dataframe
2024-10-22 09:17:05,898:INFO:Initializing K Neighbors Classifier
2024-10-22 09:17:05,898:INFO:Total runtime is 0.16594444115956625 minutes
2024-10-22 09:17:05,901:INFO:SubProcess create_model() called ==================================
2024-10-22 09:17:05,901:INFO:Initializing create_model()
2024-10-22 09:17:05,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F72639B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:17:05,902:INFO:Checking exceptions
2024-10-22 09:17:05,902:INFO:Importing libraries
2024-10-22 09:17:05,902:INFO:Copying training dataset
2024-10-22 09:17:05,946:INFO:Defining folds
2024-10-22 09:17:05,947:INFO:Declaring metric variables
2024-10-22 09:17:05,950:INFO:Importing untrained model
2024-10-22 09:17:05,952:INFO:K Neighbors Classifier Imported successfully
2024-10-22 09:17:05,957:INFO:Starting cross validation
2024-10-22 09:17:05,958:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:17:20,417:INFO:Calculating mean and std
2024-10-22 09:17:20,420:INFO:Creating metrics dataframe
2024-10-22 09:17:20,424:INFO:Uploading results into container
2024-10-22 09:17:20,425:INFO:Uploading model into container now
2024-10-22 09:17:20,426:INFO:_master_model_container: 2
2024-10-22 09:17:20,426:INFO:_display_container: 2
2024-10-22 09:17:20,427:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-22 09:17:20,427:INFO:create_model() successfully completed......................................
2024-10-22 09:17:20,507:INFO:SubProcess create_model() end ==================================
2024-10-22 09:17:20,507:INFO:Creating metrics dataframe
2024-10-22 09:17:20,513:INFO:Initializing Naive Bayes
2024-10-22 09:17:20,513:INFO:Total runtime is 0.4095359722773234 minutes
2024-10-22 09:17:20,516:INFO:SubProcess create_model() called ==================================
2024-10-22 09:17:20,516:INFO:Initializing create_model()
2024-10-22 09:17:20,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F72639B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:17:20,516:INFO:Checking exceptions
2024-10-22 09:17:20,516:INFO:Importing libraries
2024-10-22 09:17:20,516:INFO:Copying training dataset
2024-10-22 09:17:20,560:INFO:Defining folds
2024-10-22 09:17:20,560:INFO:Declaring metric variables
2024-10-22 09:17:20,562:INFO:Importing untrained model
2024-10-22 09:17:20,565:INFO:Naive Bayes Imported successfully
2024-10-22 09:17:20,570:INFO:Starting cross validation
2024-10-22 09:17:20,571:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:17:21,558:INFO:Calculating mean and std
2024-10-22 09:17:21,559:INFO:Creating metrics dataframe
2024-10-22 09:17:21,560:INFO:Uploading results into container
2024-10-22 09:17:21,560:INFO:Uploading model into container now
2024-10-22 09:17:21,561:INFO:_master_model_container: 3
2024-10-22 09:17:21,561:INFO:_display_container: 2
2024-10-22 09:17:21,561:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-22 09:17:21,561:INFO:create_model() successfully completed......................................
2024-10-22 09:17:21,639:INFO:SubProcess create_model() end ==================================
2024-10-22 09:17:21,639:INFO:Creating metrics dataframe
2024-10-22 09:17:21,645:INFO:Initializing Decision Tree Classifier
2024-10-22 09:17:21,645:INFO:Total runtime is 0.42840148210525514 minutes
2024-10-22 09:17:21,647:INFO:SubProcess create_model() called ==================================
2024-10-22 09:17:21,648:INFO:Initializing create_model()
2024-10-22 09:17:21,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F72639B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:17:21,648:INFO:Checking exceptions
2024-10-22 09:17:21,648:INFO:Importing libraries
2024-10-22 09:17:21,648:INFO:Copying training dataset
2024-10-22 09:17:21,691:INFO:Defining folds
2024-10-22 09:17:21,691:INFO:Declaring metric variables
2024-10-22 09:17:21,694:INFO:Importing untrained model
2024-10-22 09:17:21,696:INFO:Decision Tree Classifier Imported successfully
2024-10-22 09:17:21,701:INFO:Starting cross validation
2024-10-22 09:17:21,702:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:17:23,504:INFO:Calculating mean and std
2024-10-22 09:17:23,505:INFO:Creating metrics dataframe
2024-10-22 09:17:23,506:INFO:Uploading results into container
2024-10-22 09:17:23,506:INFO:Uploading model into container now
2024-10-22 09:17:23,506:INFO:_master_model_container: 4
2024-10-22 09:17:23,507:INFO:_display_container: 2
2024-10-22 09:17:23,507:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-10-22 09:17:23,507:INFO:create_model() successfully completed......................................
2024-10-22 09:17:23,583:INFO:SubProcess create_model() end ==================================
2024-10-22 09:17:23,583:INFO:Creating metrics dataframe
2024-10-22 09:17:23,589:INFO:Initializing SVM - Linear Kernel
2024-10-22 09:17:23,589:INFO:Total runtime is 0.46080624262491865 minutes
2024-10-22 09:17:23,592:INFO:SubProcess create_model() called ==================================
2024-10-22 09:17:23,592:INFO:Initializing create_model()
2024-10-22 09:17:23,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F72639B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:17:23,592:INFO:Checking exceptions
2024-10-22 09:17:23,592:INFO:Importing libraries
2024-10-22 09:17:23,592:INFO:Copying training dataset
2024-10-22 09:17:23,636:INFO:Defining folds
2024-10-22 09:17:23,636:INFO:Declaring metric variables
2024-10-22 09:17:23,638:INFO:Importing untrained model
2024-10-22 09:17:23,641:INFO:SVM - Linear Kernel Imported successfully
2024-10-22 09:17:23,645:INFO:Starting cross validation
2024-10-22 09:17:23,646:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:17:28,521:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:17:29,131:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:17:29,498:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:17:29,513:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:17:29,589:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:17:29,722:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:17:29,982:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:17:30,244:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:17:30,256:INFO:Calculating mean and std
2024-10-22 09:17:30,257:INFO:Creating metrics dataframe
2024-10-22 09:17:30,258:INFO:Uploading results into container
2024-10-22 09:17:30,258:INFO:Uploading model into container now
2024-10-22 09:17:30,259:INFO:_master_model_container: 5
2024-10-22 09:17:30,259:INFO:_display_container: 2
2024-10-22 09:17:30,260:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-22 09:17:30,260:INFO:create_model() successfully completed......................................
2024-10-22 09:17:30,348:INFO:SubProcess create_model() end ==================================
2024-10-22 09:17:30,348:INFO:Creating metrics dataframe
2024-10-22 09:17:30,354:INFO:Initializing Ridge Classifier
2024-10-22 09:17:30,354:INFO:Total runtime is 0.573553482691447 minutes
2024-10-22 09:17:30,356:INFO:SubProcess create_model() called ==================================
2024-10-22 09:17:30,357:INFO:Initializing create_model()
2024-10-22 09:17:30,357:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F72639B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:17:30,357:INFO:Checking exceptions
2024-10-22 09:17:30,357:INFO:Importing libraries
2024-10-22 09:17:30,357:INFO:Copying training dataset
2024-10-22 09:17:30,400:INFO:Defining folds
2024-10-22 09:17:30,400:INFO:Declaring metric variables
2024-10-22 09:17:30,403:INFO:Importing untrained model
2024-10-22 09:17:30,405:INFO:Ridge Classifier Imported successfully
2024-10-22 09:17:30,410:INFO:Starting cross validation
2024-10-22 09:17:30,411:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:17:31,349:INFO:Calculating mean and std
2024-10-22 09:17:31,350:INFO:Creating metrics dataframe
2024-10-22 09:17:31,351:INFO:Uploading results into container
2024-10-22 09:17:31,351:INFO:Uploading model into container now
2024-10-22 09:17:31,352:INFO:_master_model_container: 6
2024-10-22 09:17:31,352:INFO:_display_container: 2
2024-10-22 09:17:31,352:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-10-22 09:17:31,352:INFO:create_model() successfully completed......................................
2024-10-22 09:17:31,429:INFO:SubProcess create_model() end ==================================
2024-10-22 09:17:31,429:INFO:Creating metrics dataframe
2024-10-22 09:17:31,435:INFO:Initializing Random Forest Classifier
2024-10-22 09:17:31,435:INFO:Total runtime is 0.591575062274933 minutes
2024-10-22 09:17:31,437:INFO:SubProcess create_model() called ==================================
2024-10-22 09:17:31,437:INFO:Initializing create_model()
2024-10-22 09:17:31,437:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F72639B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:17:31,437:INFO:Checking exceptions
2024-10-22 09:17:31,437:INFO:Importing libraries
2024-10-22 09:17:31,437:INFO:Copying training dataset
2024-10-22 09:17:31,480:INFO:Defining folds
2024-10-22 09:17:31,480:INFO:Declaring metric variables
2024-10-22 09:17:31,483:INFO:Importing untrained model
2024-10-22 09:17:31,486:INFO:Random Forest Classifier Imported successfully
2024-10-22 09:17:31,490:INFO:Starting cross validation
2024-10-22 09:17:31,491:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:17:48,507:INFO:Calculating mean and std
2024-10-22 09:17:48,508:INFO:Creating metrics dataframe
2024-10-22 09:17:48,509:INFO:Uploading results into container
2024-10-22 09:17:48,510:INFO:Uploading model into container now
2024-10-22 09:17:48,510:INFO:_master_model_container: 7
2024-10-22 09:17:48,510:INFO:_display_container: 2
2024-10-22 09:17:48,511:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 09:17:48,511:INFO:create_model() successfully completed......................................
2024-10-22 09:17:48,596:INFO:SubProcess create_model() end ==================================
2024-10-22 09:17:48,596:INFO:Creating metrics dataframe
2024-10-22 09:17:48,602:INFO:Initializing Quadratic Discriminant Analysis
2024-10-22 09:17:48,602:INFO:Total runtime is 0.8776868422826132 minutes
2024-10-22 09:17:48,604:INFO:SubProcess create_model() called ==================================
2024-10-22 09:17:48,604:INFO:Initializing create_model()
2024-10-22 09:17:48,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F72639B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:17:48,604:INFO:Checking exceptions
2024-10-22 09:17:48,604:INFO:Importing libraries
2024-10-22 09:17:48,606:INFO:Copying training dataset
2024-10-22 09:17:48,649:INFO:Defining folds
2024-10-22 09:17:48,649:INFO:Declaring metric variables
2024-10-22 09:17:48,652:INFO:Importing untrained model
2024-10-22 09:17:48,654:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-22 09:17:48,658:INFO:Starting cross validation
2024-10-22 09:17:48,659:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:17:49,517:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 09:17:49,517:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 09:17:49,587:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 09:17:49,590:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 09:17:49,651:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 09:17:49,703:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 09:17:49,718:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 09:17:49,765:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 09:17:49,782:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 09:17:49,808:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 09:17:49,879:INFO:Calculating mean and std
2024-10-22 09:17:49,880:INFO:Creating metrics dataframe
2024-10-22 09:17:49,881:INFO:Uploading results into container
2024-10-22 09:17:49,882:INFO:Uploading model into container now
2024-10-22 09:17:49,882:INFO:_master_model_container: 8
2024-10-22 09:17:49,882:INFO:_display_container: 2
2024-10-22 09:17:49,882:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-22 09:17:49,882:INFO:create_model() successfully completed......................................
2024-10-22 09:17:49,961:INFO:SubProcess create_model() end ==================================
2024-10-22 09:17:49,961:INFO:Creating metrics dataframe
2024-10-22 09:17:49,967:INFO:Initializing Ada Boost Classifier
2024-10-22 09:17:49,967:INFO:Total runtime is 0.9004324038823446 minutes
2024-10-22 09:17:49,969:INFO:SubProcess create_model() called ==================================
2024-10-22 09:17:49,970:INFO:Initializing create_model()
2024-10-22 09:17:49,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F72639B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:17:49,970:INFO:Checking exceptions
2024-10-22 09:17:49,970:INFO:Importing libraries
2024-10-22 09:17:49,970:INFO:Copying training dataset
2024-10-22 09:17:50,017:INFO:Defining folds
2024-10-22 09:17:50,017:INFO:Declaring metric variables
2024-10-22 09:17:50,020:INFO:Importing untrained model
2024-10-22 09:17:50,023:INFO:Ada Boost Classifier Imported successfully
2024-10-22 09:17:50,028:INFO:Starting cross validation
2024-10-22 09:17:50,029:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:17:50,653:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 09:17:50,667:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 09:17:50,690:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 09:17:50,697:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 09:17:50,739:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 09:17:50,783:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 09:17:50,801:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 09:17:50,841:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 09:17:50,879:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 09:17:50,889:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 09:17:56,678:INFO:Calculating mean and std
2024-10-22 09:17:56,679:INFO:Creating metrics dataframe
2024-10-22 09:17:56,680:INFO:Uploading results into container
2024-10-22 09:17:56,681:INFO:Uploading model into container now
2024-10-22 09:17:56,681:INFO:_master_model_container: 9
2024-10-22 09:17:56,681:INFO:_display_container: 2
2024-10-22 09:17:56,681:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-10-22 09:17:56,681:INFO:create_model() successfully completed......................................
2024-10-22 09:17:56,759:INFO:SubProcess create_model() end ==================================
2024-10-22 09:17:56,759:INFO:Creating metrics dataframe
2024-10-22 09:17:56,766:INFO:Initializing Gradient Boosting Classifier
2024-10-22 09:17:56,766:INFO:Total runtime is 1.0137481411298117 minutes
2024-10-22 09:17:56,768:INFO:SubProcess create_model() called ==================================
2024-10-22 09:17:56,768:INFO:Initializing create_model()
2024-10-22 09:17:56,768:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F72639B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:17:56,768:INFO:Checking exceptions
2024-10-22 09:17:56,768:INFO:Importing libraries
2024-10-22 09:17:56,768:INFO:Copying training dataset
2024-10-22 09:17:56,810:INFO:Defining folds
2024-10-22 09:17:56,810:INFO:Declaring metric variables
2024-10-22 09:17:56,812:INFO:Importing untrained model
2024-10-22 09:17:56,816:INFO:Gradient Boosting Classifier Imported successfully
2024-10-22 09:17:56,821:INFO:Starting cross validation
2024-10-22 09:17:56,822:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:18:18,412:INFO:Calculating mean and std
2024-10-22 09:18:18,412:INFO:Creating metrics dataframe
2024-10-22 09:18:18,413:INFO:Uploading results into container
2024-10-22 09:18:18,414:INFO:Uploading model into container now
2024-10-22 09:18:18,414:INFO:_master_model_container: 10
2024-10-22 09:18:18,414:INFO:_display_container: 2
2024-10-22 09:18:18,415:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-22 09:18:18,415:INFO:create_model() successfully completed......................................
2024-10-22 09:18:18,493:INFO:SubProcess create_model() end ==================================
2024-10-22 09:18:18,494:INFO:Creating metrics dataframe
2024-10-22 09:18:18,500:INFO:Initializing Linear Discriminant Analysis
2024-10-22 09:18:18,501:INFO:Total runtime is 1.3760071992874146 minutes
2024-10-22 09:18:18,503:INFO:SubProcess create_model() called ==================================
2024-10-22 09:18:18,503:INFO:Initializing create_model()
2024-10-22 09:18:18,503:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F72639B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:18:18,503:INFO:Checking exceptions
2024-10-22 09:18:18,503:INFO:Importing libraries
2024-10-22 09:18:18,503:INFO:Copying training dataset
2024-10-22 09:18:18,548:INFO:Defining folds
2024-10-22 09:18:18,548:INFO:Declaring metric variables
2024-10-22 09:18:18,552:INFO:Importing untrained model
2024-10-22 09:18:18,554:INFO:Linear Discriminant Analysis Imported successfully
2024-10-22 09:18:18,559:INFO:Starting cross validation
2024-10-22 09:18:18,560:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:18:19,751:INFO:Calculating mean and std
2024-10-22 09:18:19,752:INFO:Creating metrics dataframe
2024-10-22 09:18:19,753:INFO:Uploading results into container
2024-10-22 09:18:19,754:INFO:Uploading model into container now
2024-10-22 09:18:19,754:INFO:_master_model_container: 11
2024-10-22 09:18:19,754:INFO:_display_container: 2
2024-10-22 09:18:19,754:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-22 09:18:19,754:INFO:create_model() successfully completed......................................
2024-10-22 09:18:19,834:INFO:SubProcess create_model() end ==================================
2024-10-22 09:18:19,834:INFO:Creating metrics dataframe
2024-10-22 09:18:19,842:INFO:Initializing Extra Trees Classifier
2024-10-22 09:18:19,842:INFO:Total runtime is 1.398345704873403 minutes
2024-10-22 09:18:19,844:INFO:SubProcess create_model() called ==================================
2024-10-22 09:18:19,844:INFO:Initializing create_model()
2024-10-22 09:18:19,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F72639B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:18:19,844:INFO:Checking exceptions
2024-10-22 09:18:19,844:INFO:Importing libraries
2024-10-22 09:18:19,844:INFO:Copying training dataset
2024-10-22 09:18:19,889:INFO:Defining folds
2024-10-22 09:18:19,889:INFO:Declaring metric variables
2024-10-22 09:18:19,892:INFO:Importing untrained model
2024-10-22 09:18:19,894:INFO:Extra Trees Classifier Imported successfully
2024-10-22 09:18:19,899:INFO:Starting cross validation
2024-10-22 09:18:19,900:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:18:33,716:INFO:Calculating mean and std
2024-10-22 09:18:33,717:INFO:Creating metrics dataframe
2024-10-22 09:18:33,719:INFO:Uploading results into container
2024-10-22 09:18:33,720:INFO:Uploading model into container now
2024-10-22 09:18:33,720:INFO:_master_model_container: 12
2024-10-22 09:18:33,720:INFO:_display_container: 2
2024-10-22 09:18:33,721:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-10-22 09:18:33,721:INFO:create_model() successfully completed......................................
2024-10-22 09:18:33,815:INFO:SubProcess create_model() end ==================================
2024-10-22 09:18:33,815:INFO:Creating metrics dataframe
2024-10-22 09:18:33,823:INFO:Initializing Light Gradient Boosting Machine
2024-10-22 09:18:33,823:INFO:Total runtime is 1.6313711682955425 minutes
2024-10-22 09:18:33,826:INFO:SubProcess create_model() called ==================================
2024-10-22 09:18:33,826:INFO:Initializing create_model()
2024-10-22 09:18:33,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F72639B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:18:33,826:INFO:Checking exceptions
2024-10-22 09:18:33,826:INFO:Importing libraries
2024-10-22 09:18:33,826:INFO:Copying training dataset
2024-10-22 09:18:33,872:INFO:Defining folds
2024-10-22 09:18:33,872:INFO:Declaring metric variables
2024-10-22 09:18:33,875:INFO:Importing untrained model
2024-10-22 09:18:33,877:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-22 09:18:33,882:INFO:Starting cross validation
2024-10-22 09:18:33,883:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:18:37,110:INFO:Calculating mean and std
2024-10-22 09:18:37,111:INFO:Creating metrics dataframe
2024-10-22 09:18:37,114:INFO:Uploading results into container
2024-10-22 09:18:37,115:INFO:Uploading model into container now
2024-10-22 09:18:37,116:INFO:_master_model_container: 13
2024-10-22 09:18:37,116:INFO:_display_container: 2
2024-10-22 09:18:37,117:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 09:18:37,117:INFO:create_model() successfully completed......................................
2024-10-22 09:18:37,273:INFO:SubProcess create_model() end ==================================
2024-10-22 09:18:37,273:INFO:Creating metrics dataframe
2024-10-22 09:18:37,281:INFO:Initializing Dummy Classifier
2024-10-22 09:18:37,281:INFO:Total runtime is 1.688998345534007 minutes
2024-10-22 09:18:37,284:INFO:SubProcess create_model() called ==================================
2024-10-22 09:18:37,284:INFO:Initializing create_model()
2024-10-22 09:18:37,284:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F72639B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:18:37,284:INFO:Checking exceptions
2024-10-22 09:18:37,284:INFO:Importing libraries
2024-10-22 09:18:37,284:INFO:Copying training dataset
2024-10-22 09:18:37,329:INFO:Defining folds
2024-10-22 09:18:37,329:INFO:Declaring metric variables
2024-10-22 09:18:37,332:INFO:Importing untrained model
2024-10-22 09:18:37,334:INFO:Dummy Classifier Imported successfully
2024-10-22 09:18:37,341:INFO:Starting cross validation
2024-10-22 09:18:37,343:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:18:37,902:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:18:37,905:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:18:37,928:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:18:37,981:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:18:37,987:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:18:38,002:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:18:38,020:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:18:38,045:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:18:38,050:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:18:38,063:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 09:18:38,075:INFO:Calculating mean and std
2024-10-22 09:18:38,076:INFO:Creating metrics dataframe
2024-10-22 09:18:38,077:INFO:Uploading results into container
2024-10-22 09:18:38,078:INFO:Uploading model into container now
2024-10-22 09:18:38,078:INFO:_master_model_container: 14
2024-10-22 09:18:38,078:INFO:_display_container: 2
2024-10-22 09:18:38,078:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-10-22 09:18:38,079:INFO:create_model() successfully completed......................................
2024-10-22 09:18:38,156:INFO:SubProcess create_model() end ==================================
2024-10-22 09:18:38,157:INFO:Creating metrics dataframe
2024-10-22 09:18:38,191:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-22 09:18:38,197:INFO:Initializing create_model()
2024-10-22 09:18:38,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:18:38,198:INFO:Checking exceptions
2024-10-22 09:18:38,199:INFO:Importing libraries
2024-10-22 09:18:38,199:INFO:Copying training dataset
2024-10-22 09:18:38,245:INFO:Defining folds
2024-10-22 09:18:38,245:INFO:Declaring metric variables
2024-10-22 09:18:38,246:INFO:Importing untrained model
2024-10-22 09:18:38,246:INFO:Declaring custom model
2024-10-22 09:18:38,246:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-22 09:18:38,247:INFO:Cross validation set to False
2024-10-22 09:18:38,247:INFO:Fitting Model
2024-10-22 09:18:38,551:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-22 09:18:38,554:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000832 seconds.
2024-10-22 09:18:38,554:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-10-22 09:18:38,554:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-10-22 09:18:38,554:INFO:[LightGBM] [Info] Total Bins 1115
2024-10-22 09:18:38,555:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 13
2024-10-22 09:18:38,556:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-22 09:18:38,556:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-22 09:18:38,771:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 09:18:38,771:INFO:create_model() successfully completed......................................
2024-10-22 09:18:38,876:INFO:Creating Dashboard logs
2024-10-22 09:18:38,879:INFO:Model: Light Gradient Boosting Machine
2024-10-22 09:18:38,913:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-22 09:18:39,019:INFO:Initializing predict_model()
2024-10-22 09:18:39,019:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7286A1EE0>)
2024-10-22 09:18:39,019:INFO:Checking exceptions
2024-10-22 09:18:39,019:INFO:Preloading libraries
2024-10-22 09:18:42,486:INFO:Creating Dashboard logs
2024-10-22 09:18:42,491:INFO:Model: Gradient Boosting Classifier
2024-10-22 09:18:42,552:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-22 09:18:42,945:INFO:Creating Dashboard logs
2024-10-22 09:18:42,948:INFO:Model: Ada Boost Classifier
2024-10-22 09:18:42,985:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2024-10-22 09:18:43,349:INFO:Creating Dashboard logs
2024-10-22 09:18:43,351:INFO:Model: Random Forest Classifier
2024-10-22 09:18:43,384:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 09:18:43,785:INFO:Creating Dashboard logs
2024-10-22 09:18:43,788:INFO:Model: Extra Trees Classifier
2024-10-22 09:18:43,824:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 09:18:44,270:INFO:Creating Dashboard logs
2024-10-22 09:18:44,273:INFO:Model: Linear Discriminant Analysis
2024-10-22 09:18:44,312:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-10-22 09:18:44,701:INFO:Creating Dashboard logs
2024-10-22 09:18:44,704:INFO:Model: Ridge Classifier
2024-10-22 09:18:44,737:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-10-22 09:18:45,110:INFO:Creating Dashboard logs
2024-10-22 09:18:45,112:INFO:Model: Logistic Regression
2024-10-22 09:18:45,146:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-10-22 09:18:45,545:INFO:Creating Dashboard logs
2024-10-22 09:18:45,548:INFO:Model: Decision Tree Classifier
2024-10-22 09:18:45,582:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-10-22 09:18:45,943:INFO:Creating Dashboard logs
2024-10-22 09:18:45,945:INFO:Model: Naive Bayes
2024-10-22 09:18:45,977:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-10-22 09:18:46,889:INFO:Creating Dashboard logs
2024-10-22 09:18:46,892:INFO:Model: Dummy Classifier
2024-10-22 09:18:46,923:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2024-10-22 09:18:47,111:INFO:Creating Dashboard logs
2024-10-22 09:18:47,114:INFO:Model: K Neighbors Classifier
2024-10-22 09:18:47,148:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-10-22 09:18:47,354:INFO:Creating Dashboard logs
2024-10-22 09:18:47,357:INFO:Model: SVM - Linear Kernel
2024-10-22 09:18:47,390:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-22 09:18:47,933:INFO:Creating Dashboard logs
2024-10-22 09:18:47,935:INFO:Model: Quadratic Discriminant Analysis
2024-10-22 09:18:47,968:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-10-22 09:18:49,690:INFO:_master_model_container: 14
2024-10-22 09:18:49,690:INFO:_display_container: 2
2024-10-22 09:18:49,690:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 09:18:49,691:INFO:compare_models() successfully completed......................................
2024-10-22 09:19:00,794:INFO:Initializing create_model()
2024-10-22 09:19:00,794:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:19:00,794:INFO:Checking exceptions
2024-10-22 09:19:00,806:INFO:Importing libraries
2024-10-22 09:19:00,806:INFO:Copying training dataset
2024-10-22 09:19:00,861:INFO:Defining folds
2024-10-22 09:19:00,862:INFO:Declaring metric variables
2024-10-22 09:19:00,864:INFO:Importing untrained model
2024-10-22 09:19:00,867:INFO:Random Forest Classifier Imported successfully
2024-10-22 09:19:00,872:INFO:Starting cross validation
2024-10-22 09:19:00,873:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:19:18,050:INFO:Calculating mean and std
2024-10-22 09:19:18,051:INFO:Creating metrics dataframe
2024-10-22 09:19:18,055:INFO:Finalizing model
2024-10-22 09:19:20,176:INFO:Creating Dashboard logs
2024-10-22 09:19:20,179:INFO:Model: Random Forest Classifier
2024-10-22 09:19:20,215:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 09:19:20,320:INFO:Initializing predict_model()
2024-10-22 09:19:20,320:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F726654AE0>)
2024-10-22 09:19:20,320:INFO:Checking exceptions
2024-10-22 09:19:20,320:INFO:Preloading libraries
2024-10-22 09:19:41,100:INFO:Uploading results into container
2024-10-22 09:19:41,101:INFO:Uploading model into container now
2024-10-22 09:19:41,109:INFO:_master_model_container: 15
2024-10-22 09:19:41,109:INFO:_display_container: 3
2024-10-22 09:19:41,109:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 09:19:41,110:INFO:create_model() successfully completed......................................
2024-10-22 09:20:11,519:INFO:Initializing tune_model()
2024-10-22 09:20:11,519:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'n_estimators': [100], 'max_depth': [10, 20], 'min_samples_split': [2]}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-10-22 09:20:11,519:INFO:Checking exceptions
2024-10-22 09:20:11,547:INFO:Copying training dataset
2024-10-22 09:20:11,573:INFO:Checking base model
2024-10-22 09:20:11,573:INFO:Base model : Random Forest Classifier
2024-10-22 09:20:11,576:INFO:Declaring metric variables
2024-10-22 09:20:11,578:INFO:Defining Hyperparameters
2024-10-22 09:20:11,660:INFO:custom_grid: {'actual_estimator__n_estimators': [100], 'actual_estimator__max_depth': [10, 20], 'actual_estimator__min_samples_split': [2]}
2024-10-22 09:20:11,660:INFO:Tuning with n_jobs=-1
2024-10-22 09:20:11,660:INFO:Initializing GridSearchCV
2024-10-22 09:20:39,061:INFO:best_params: {'actual_estimator__max_depth': 10, 'actual_estimator__min_samples_split': 2, 'actual_estimator__n_estimators': 100}
2024-10-22 09:20:39,062:INFO:Hyperparameter search completed
2024-10-22 09:20:39,062:INFO:SubProcess create_model() called ==================================
2024-10-22 09:20:39,062:INFO:Initializing create_model()
2024-10-22 09:20:39,062:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F7265C12D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'max_depth': 10, 'min_samples_split': 2, 'n_estimators': 100})
2024-10-22 09:20:39,062:INFO:Checking exceptions
2024-10-22 09:20:39,062:INFO:Importing libraries
2024-10-22 09:20:39,063:INFO:Copying training dataset
2024-10-22 09:20:39,100:INFO:Defining folds
2024-10-22 09:20:39,100:INFO:Declaring metric variables
2024-10-22 09:20:39,102:INFO:Importing untrained model
2024-10-22 09:20:39,103:INFO:Declaring custom model
2024-10-22 09:20:39,105:INFO:Random Forest Classifier Imported successfully
2024-10-22 09:20:39,110:INFO:Starting cross validation
2024-10-22 09:20:39,111:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:20:51,194:INFO:Calculating mean and std
2024-10-22 09:20:51,195:INFO:Creating metrics dataframe
2024-10-22 09:20:51,200:INFO:Finalizing model
2024-10-22 09:20:52,732:INFO:Uploading results into container
2024-10-22 09:20:52,732:INFO:Uploading model into container now
2024-10-22 09:20:52,733:INFO:_master_model_container: 16
2024-10-22 09:20:52,733:INFO:_display_container: 4
2024-10-22 09:20:52,733:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 09:20:52,733:INFO:create_model() successfully completed......................................
2024-10-22 09:20:52,819:INFO:SubProcess create_model() end ==================================
2024-10-22 09:20:52,819:INFO:choose_better activated
2024-10-22 09:20:52,822:INFO:SubProcess create_model() called ==================================
2024-10-22 09:20:52,822:INFO:Initializing create_model()
2024-10-22 09:20:52,822:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:20:52,822:INFO:Checking exceptions
2024-10-22 09:20:52,823:INFO:Importing libraries
2024-10-22 09:20:52,823:INFO:Copying training dataset
2024-10-22 09:20:52,862:INFO:Defining folds
2024-10-22 09:20:52,862:INFO:Declaring metric variables
2024-10-22 09:20:52,862:INFO:Importing untrained model
2024-10-22 09:20:52,862:INFO:Declaring custom model
2024-10-22 09:20:52,863:INFO:Random Forest Classifier Imported successfully
2024-10-22 09:20:52,863:INFO:Starting cross validation
2024-10-22 09:20:52,864:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 09:21:10,492:INFO:Calculating mean and std
2024-10-22 09:21:10,492:INFO:Creating metrics dataframe
2024-10-22 09:21:10,494:INFO:Finalizing model
2024-10-22 09:21:12,668:INFO:Uploading results into container
2024-10-22 09:21:12,669:INFO:Uploading model into container now
2024-10-22 09:21:12,669:INFO:_master_model_container: 17
2024-10-22 09:21:12,669:INFO:_display_container: 5
2024-10-22 09:21:12,670:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 09:21:12,670:INFO:create_model() successfully completed......................................
2024-10-22 09:21:12,751:INFO:SubProcess create_model() end ==================================
2024-10-22 09:21:12,752:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8611
2024-10-22 09:21:12,752:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8639
2024-10-22 09:21:12,753:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-10-22 09:21:12,753:INFO:choose_better completed
2024-10-22 09:21:12,753:INFO:Creating Dashboard logs
2024-10-22 09:21:12,756:INFO:Model: Random Forest Classifier
2024-10-22 09:21:12,789:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 10, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 09:21:12,891:INFO:Initializing predict_model()
2024-10-22 09:21:12,891:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F7266553A0>)
2024-10-22 09:21:12,891:INFO:Checking exceptions
2024-10-22 09:21:12,891:INFO:Preloading libraries
2024-10-22 09:21:13,652:INFO:_master_model_container: 17
2024-10-22 09:21:13,652:INFO:_display_container: 4
2024-10-22 09:21:13,652:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 09:21:13,653:INFO:tune_model() successfully completed......................................
2024-10-22 09:21:25,767:INFO:Initializing plot_model()
2024-10-22 09:21:25,767:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-10-22 09:21:25,767:INFO:Checking exceptions
2024-10-22 09:21:25,856:INFO:Preloading libraries
2024-10-22 09:21:25,870:INFO:Copying training dataset
2024-10-22 09:21:25,870:INFO:Plot type: confusion_matrix
2024-10-22 09:21:26,173:INFO:Fitting Model
2024-10-22 09:21:26,210:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-10-22 09:21:26,212:INFO:Scoring test/hold-out set
2024-10-22 09:21:26,552:INFO:Visual Rendered Successfully
2024-10-22 09:21:26,636:INFO:plot_model() successfully completed......................................
2024-10-22 09:21:32,475:INFO:Initializing evaluate_model()
2024-10-22 09:21:32,475:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-10-22 09:21:32,500:INFO:Initializing plot_model()
2024-10-22 09:21:32,500:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-22 09:21:32,501:INFO:Checking exceptions
2024-10-22 09:21:32,531:INFO:Preloading libraries
2024-10-22 09:21:32,544:INFO:Copying training dataset
2024-10-22 09:21:32,545:INFO:Plot type: pipeline
2024-10-22 09:21:32,912:INFO:Visual Rendered Successfully
2024-10-22 09:21:32,994:INFO:plot_model() successfully completed......................................
2024-10-22 09:21:37,782:INFO:Initializing finalize_model()
2024-10-22 09:21:37,782:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-10-22 09:21:37,783:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 09:21:37,802:INFO:Initializing create_model()
2024-10-22 09:21:37,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 09:21:37,802:INFO:Checking exceptions
2024-10-22 09:21:37,803:INFO:Importing libraries
2024-10-22 09:21:37,803:INFO:Copying training dataset
2024-10-22 09:21:37,806:INFO:Defining folds
2024-10-22 09:21:37,806:INFO:Declaring metric variables
2024-10-22 09:21:37,806:INFO:Importing untrained model
2024-10-22 09:21:37,806:INFO:Declaring custom model
2024-10-22 09:21:37,807:INFO:Random Forest Classifier Imported successfully
2024-10-22 09:21:37,807:INFO:Cross validation set to False
2024-10-22 09:21:37,807:INFO:Fitting Model
2024-10-22 09:21:40,255:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-10-22 09:21:40,255:INFO:create_model() successfully completed......................................
2024-10-22 09:21:40,337:INFO:Creating Dashboard logs
2024-10-22 09:21:40,337:INFO:Model: Random Forest Classifier
2024-10-22 09:21:40,369:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 10, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 09:21:43,409:INFO:_master_model_container: 17
2024-10-22 09:21:43,409:INFO:_display_container: 4
2024-10-22 09:21:43,422:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-10-22 09:21:43,422:INFO:finalize_model() successfully completed......................................
2024-10-22 09:21:56,884:INFO:Initializing predict_model()
2024-10-22 09:21:56,885:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F727F391C0>)
2024-10-22 09:21:56,885:INFO:Checking exceptions
2024-10-22 09:21:56,885:INFO:Preloading libraries
2024-10-22 09:21:56,887:INFO:Set up data.
2024-10-22 09:21:56,923:INFO:Set up index.
2024-10-22 09:22:18,265:INFO:Initializing save_model()
2024-10-22 09:22:18,265:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=final_dt_model_customer_churn, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-22 09:22:18,266:INFO:Adding model into prep_pipe
2024-10-22 09:22:18,266:WARNING:Only Model saved as it was a pipeline.
2024-10-22 09:22:18,336:INFO:final_dt_model_customer_churn.pkl saved in current working directory
2024-10-22 09:22:18,352:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-10-22 09:22:18,352:INFO:save_model() successfully completed......................................
2024-10-22 09:22:18,430:INFO:Initializing load_model()
2024-10-22 09:22:18,430:INFO:load_model(model_name=final_dt_model_customer_churn, platform=None, authentication=None, verbose=True)
2024-10-22 11:52:19,079:INFO:Initializing create_model()
2024-10-22 11:52:19,079:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 11:52:19,079:INFO:Checking exceptions
2024-10-22 11:52:19,090:INFO:Importing libraries
2024-10-22 11:52:19,090:INFO:Copying training dataset
2024-10-22 11:52:19,136:INFO:Defining folds
2024-10-22 11:52:19,137:INFO:Declaring metric variables
2024-10-22 11:52:19,139:INFO:Importing untrained model
2024-10-22 11:52:19,144:INFO:Random Forest Classifier Imported successfully
2024-10-22 11:52:19,150:INFO:Starting cross validation
2024-10-22 11:52:19,151:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 11:52:39,417:INFO:Calculating mean and std
2024-10-22 11:52:39,420:INFO:Creating metrics dataframe
2024-10-22 11:52:39,426:INFO:Finalizing model
2024-10-22 11:52:41,618:INFO:Creating Dashboard logs
2024-10-22 11:52:41,620:INFO:Model: Random Forest Classifier
2024-10-22 11:52:41,665:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 11:52:42,078:INFO:Initializing predict_model()
2024-10-22 11:52:42,078:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F72623AC50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F727A0BF60>)
2024-10-22 11:52:42,078:INFO:Checking exceptions
2024-10-22 11:52:42,078:INFO:Preloading libraries
2024-10-22 11:52:49,305:INFO:Uploading results into container
2024-10-22 11:52:49,305:INFO:Uploading model into container now
2024-10-22 11:52:49,314:INFO:_master_model_container: 18
2024-10-22 11:52:49,314:INFO:_display_container: 5
2024-10-22 11:52:49,314:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 11:52:49,314:INFO:create_model() successfully completed......................................
2024-10-22 12:21:55,692:WARNING:C:\Users\admin\AppData\Local\Temp\ipykernel_28360\3444427300.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='Credito_model2',version=1,stage='Production')

2024-10-22 12:23:27,441:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 12:24:01,244:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 12:42:41,124:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 12:42:50,149:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 12:53:30,435:WARNING:C:\Users\admin\AppData\Local\Temp\ipykernel_27260\962847790.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='Credito_model3',version=1,stage='Production')

2024-10-22 12:55:49,432:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 12:56:47,376:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 13:03:31,200:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 13:03:50,229:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 13:04:55,517:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 13:11:05,007:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 13:11:09,330:WARNING:C:\Users\admin\AppData\Local\Temp\ipykernel_27260\1968337318.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='Credito_Prod',version=1,stage='Production')

2024-10-22 13:11:13,536:WARNING:d:\EntregableMLA\TrabajoFinal\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

